use ecom;
DELIMITER $$

DROP PROCEDURE IF EXISTS `ecom`.`GetInventoryReportForOutlets`$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `GetInventoryReportForOutlets`(companyId int, outletId  int)
BEGIN
SELECT `PRODUCT_NAME`, `OUTLET_NAME`,`SKU`,`BRAND_NAME`,`CONTACT_NAME`,`PRODUCT_TYPE`,`CURRENT_INVENTORY`,
(`CURRENT_INVENTORY`*ROUND(`NET_PRICE`,0)) AS `STOCK_VALUE`,ROUND(`NET_PRICE`,0)AS `NET_PRICE`,`REORDER_POINT`, `REORDER_AMOUNT`
FROM mv_inventory_report rpt where rpt.OUTLET_ASSOCICATION_ID = outletId and rpt.COMPANY_ASSOCIATION_ID = companyId
order by ID;
END$$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `ecom`.`GetInventoryReportForWarehouse`$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `GetInventoryReportForWarehouse`(companyId int, outletId  int)
BEGIN
SELECT `PRODUCT_NAME`, `OUTLET_NAME`,`SKU`,`BRAND_NAME`,`CONTACT_NAME`,`PRODUCT_TYPE`,`CURRENT_INVENTORY`,
(`CURRENT_INVENTORY`*ROUND(`SUPPLY_PRICE_EXCL_TAX`,0)) AS `STOCK_VALUE`,ROUND(`SUPPLY_PRICE_EXCL_TAX`,0)AS `NET_PRICE`,`REORDER_POINT`, `REORDER_AMOUNT`
FROM mv_inventory_report rpt where rpt.OUTLET_ASSOCICATION_ID = outletId and rpt.COMPANY_ASSOCIATION_ID = companyId
order by ID;
END$$

DELIMITER ;