package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * GeneralLedger generated by hbm2java
 */
@Entity
@Table(name="general_ledger"
    ,catalog="ecom"
)
public class GeneralLedger  implements java.io.Serializable {


     private Integer generalLedgerId;
     private ChartOfAccount chartOfAccount;
     private Module module;
     private GeneralLedgerEvent generalLedgerEventByGlSubEventAssociationId;
     private User userByCreatedBy;
     private User userByUpdatedBy;
     private Company company;
     private GeneralLedgerEvent generalLedgerEventByGlEventAssociationId;
     private int referenceId;
     private BigDecimal debitAmount;
     private BigDecimal creditAmount;
     private String remarks;
     private BigDecimal balanceAmount;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;

    public GeneralLedger() {
    }

	
    public GeneralLedger(ChartOfAccount chartOfAccount, Module module, GeneralLedgerEvent generalLedgerEventByGlSubEventAssociationId, User userByCreatedBy, User userByUpdatedBy, Company company, GeneralLedgerEvent generalLedgerEventByGlEventAssociationId, int referenceId, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.chartOfAccount = chartOfAccount;
        this.module = module;
        this.generalLedgerEventByGlSubEventAssociationId = generalLedgerEventByGlSubEventAssociationId;
        this.userByCreatedBy = userByCreatedBy;
        this.userByUpdatedBy = userByUpdatedBy;
        this.company = company;
        this.generalLedgerEventByGlEventAssociationId = generalLedgerEventByGlEventAssociationId;
        this.referenceId = referenceId;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public GeneralLedger(ChartOfAccount chartOfAccount, Module module, GeneralLedgerEvent generalLedgerEventByGlSubEventAssociationId, User userByCreatedBy, User userByUpdatedBy, Company company, GeneralLedgerEvent generalLedgerEventByGlEventAssociationId, int referenceId, BigDecimal debitAmount, BigDecimal creditAmount, String remarks, BigDecimal balanceAmount, boolean activeIndicator, Date createdDate, Date lastUpdated) {
       this.chartOfAccount = chartOfAccount;
       this.module = module;
       this.generalLedgerEventByGlSubEventAssociationId = generalLedgerEventByGlSubEventAssociationId;
       this.userByCreatedBy = userByCreatedBy;
       this.userByUpdatedBy = userByUpdatedBy;
       this.company = company;
       this.generalLedgerEventByGlEventAssociationId = generalLedgerEventByGlEventAssociationId;
       this.referenceId = referenceId;
       this.debitAmount = debitAmount;
       this.creditAmount = creditAmount;
       this.remarks = remarks;
       this.balanceAmount = balanceAmount;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="GENERAL_LEDGER_ID", unique=true, nullable=false)
    public Integer getGeneralLedgerId() {
        return this.generalLedgerId;
    }
    
    public void setGeneralLedgerId(Integer generalLedgerId) {
        this.generalLedgerId = generalLedgerId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CHART_OF_ACCOUNT_ASSOCIATION_ID", nullable=false)
    public ChartOfAccount getChartOfAccount() {
        return this.chartOfAccount;
    }
    
    public void setChartOfAccount(ChartOfAccount chartOfAccount) {
        this.chartOfAccount = chartOfAccount;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MODULE_ASSOCIATION_ID", nullable=false)
    public Module getModule() {
        return this.module;
    }
    
    public void setModule(Module module) {
        this.module = module;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="GL_SUB_EVENT_ASSOCIATION_ID", nullable=false)
    public GeneralLedgerEvent getGeneralLedgerEventByGlSubEventAssociationId() {
        return this.generalLedgerEventByGlSubEventAssociationId;
    }
    
    public void setGeneralLedgerEventByGlSubEventAssociationId(GeneralLedgerEvent generalLedgerEventByGlSubEventAssociationId) {
        this.generalLedgerEventByGlSubEventAssociationId = generalLedgerEventByGlSubEventAssociationId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY", nullable=false)
    public User getUserByCreatedBy() {
        return this.userByCreatedBy;
    }
    
    public void setUserByCreatedBy(User userByCreatedBy) {
        this.userByCreatedBy = userByCreatedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="UPDATED_BY", nullable=false)
    public User getUserByUpdatedBy() {
        return this.userByUpdatedBy;
    }
    
    public void setUserByUpdatedBy(User userByUpdatedBy) {
        this.userByUpdatedBy = userByUpdatedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="GL_EVENT_ASSOCIATION_ID", nullable=false)
    public GeneralLedgerEvent getGeneralLedgerEventByGlEventAssociationId() {
        return this.generalLedgerEventByGlEventAssociationId;
    }
    
    public void setGeneralLedgerEventByGlEventAssociationId(GeneralLedgerEvent generalLedgerEventByGlEventAssociationId) {
        this.generalLedgerEventByGlEventAssociationId = generalLedgerEventByGlEventAssociationId;
    }

    
    @Column(name="REFERENCE_ID", nullable=false)
    public int getReferenceId() {
        return this.referenceId;
    }
    
    public void setReferenceId(int referenceId) {
        this.referenceId = referenceId;
    }

    
    @Column(name="DEBIT_AMOUNT", precision=21, scale=5)
    public BigDecimal getDebitAmount() {
        return this.debitAmount;
    }
    
    public void setDebitAmount(BigDecimal debitAmount) {
        this.debitAmount = debitAmount;
    }

    
    @Column(name="CREDIT_AMOUNT", precision=21, scale=5)
    public BigDecimal getCreditAmount() {
        return this.creditAmount;
    }
    
    public void setCreditAmount(BigDecimal creditAmount) {
        this.creditAmount = creditAmount;
    }

    
    @Column(name="REMARKS", length=250)
    public String getRemarks() {
        return this.remarks;
    }
    
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    
    @Column(name="BALANCE_AMOUNT", precision=21, scale=5)
    public BigDecimal getBalanceAmount() {
        return this.balanceAmount;
    }
    
    public void setBalanceAmount(BigDecimal balanceAmount) {
        this.balanceAmount = balanceAmount;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }




}


