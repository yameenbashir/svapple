package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Receipt generated by hbm2java
 */
@Entity
@Table(name="receipt"
    ,catalog="ecom"
)
public class Receipt  implements java.io.Serializable {


     private Integer receiptId;
     private Contact contact;
     private PaymentType paymentType;
     private DailyRegister dailyRegister;
     private Outlet outlet;
     private Company company;
     private InvoiceMain invoiceMain;
     private Status status;
     private String receiptRefNo;
     private Date receiptDate;
     private BigDecimal receiptAmount;
     private String receiptCancellationDate;
     private BigDecimal receiptUafAmt;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;
     private Integer createdBy;
     private Integer updatedBy;

    public Receipt() {
    }

	
    public Receipt(PaymentType paymentType, DailyRegister dailyRegister, Company company, Status status, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.paymentType = paymentType;
        this.dailyRegister = dailyRegister;
        this.company = company;
        this.status = status;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public Receipt(Contact contact, PaymentType paymentType, DailyRegister dailyRegister, Outlet outlet, Company company, InvoiceMain invoiceMain, Status status, String receiptRefNo, Date receiptDate, BigDecimal receiptAmount, String receiptCancellationDate, BigDecimal receiptUafAmt, boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy) {
       this.contact = contact;
       this.paymentType = paymentType;
       this.dailyRegister = dailyRegister;
       this.outlet = outlet;
       this.company = company;
       this.invoiceMain = invoiceMain;
       this.status = status;
       this.receiptRefNo = receiptRefNo;
       this.receiptDate = receiptDate;
       this.receiptAmount = receiptAmount;
       this.receiptCancellationDate = receiptCancellationDate;
       this.receiptUafAmt = receiptUafAmt;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="RECEIPT_ID", unique=true, nullable=false)
    public Integer getReceiptId() {
        return this.receiptId;
    }
    
    public void setReceiptId(Integer receiptId) {
        this.receiptId = receiptId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_ASSOCIATION_ID")
    public Contact getContact() {
        return this.contact;
    }
    
    public void setContact(Contact contact) {
        this.contact = contact;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAYMENT_TYPE_ASSOCICATION_ID", nullable=false)
    public PaymentType getPaymentType() {
        return this.paymentType;
    }
    
    public void setPaymentType(PaymentType paymentType) {
        this.paymentType = paymentType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DAILY_REGISTER_ASSOCICATION_ID", nullable=false)
    public DailyRegister getDailyRegister() {
        return this.dailyRegister;
    }
    
    public void setDailyRegister(DailyRegister dailyRegister) {
        this.dailyRegister = dailyRegister;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OUTLET_ASSOCIATION_ID")
    public Outlet getOutlet() {
        return this.outlet;
    }
    
    public void setOutlet(Outlet outlet) {
        this.outlet = outlet;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_MAIN_ASSOCICATION_ID")
    public InvoiceMain getInvoiceMain() {
        return this.invoiceMain;
    }
    
    public void setInvoiceMain(InvoiceMain invoiceMain) {
        this.invoiceMain = invoiceMain;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ASSOCICATION_ID", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="RECEIPT_REF_NO", length=45)
    public String getReceiptRefNo() {
        return this.receiptRefNo;
    }
    
    public void setReceiptRefNo(String receiptRefNo) {
        this.receiptRefNo = receiptRefNo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="RECEIPT_DATE", length=19)
    public Date getReceiptDate() {
        return this.receiptDate;
    }
    
    public void setReceiptDate(Date receiptDate) {
        this.receiptDate = receiptDate;
    }

    
    @Column(name="RECEIPT_AMOUNT", precision=20)
    public BigDecimal getReceiptAmount() {
        return this.receiptAmount;
    }
    
    public void setReceiptAmount(BigDecimal receiptAmount) {
        this.receiptAmount = receiptAmount;
    }

    
    @Column(name="RECEIPT_CANCELLATION_DATE", length=45)
    public String getReceiptCancellationDate() {
        return this.receiptCancellationDate;
    }
    
    public void setReceiptCancellationDate(String receiptCancellationDate) {
        this.receiptCancellationDate = receiptCancellationDate;
    }

    
    @Column(name="RECEIPT_UAF_AMT", precision=20)
    public BigDecimal getReceiptUafAmt() {
        return this.receiptUafAmt;
    }
    
    public void setReceiptUafAmt(BigDecimal receiptUafAmt) {
        this.receiptUafAmt = receiptUafAmt;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }




}


