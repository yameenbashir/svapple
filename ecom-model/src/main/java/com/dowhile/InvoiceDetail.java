package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InvoiceDetail generated by hbm2java
 */
@Entity
@Table(name="invoice_detail"
    ,catalog="ecom"
)
public class InvoiceDetail  implements java.io.Serializable {


     private Integer invoiceDetailId;
     private Outlet outlet;
     private ProductVariant productVariant;
     private Company company;
     private InvoiceMain invoiceMain;
     private Product product;
     private BigDecimal itemRetailPrice;
     private BigDecimal itemSalePrice;
     private BigDecimal itemDiscountPrct;
     private BigDecimal itemTaxAmount;
     private BigDecimal itemOrignalAmt;
     private String itemNotes;
     private int productQuantity;
     private Date createdDate;
     private Date lastUpdated;
     private Integer createdBy;
     private Integer updatedBy;
     private boolean isreturn;

    public InvoiceDetail() {
    }

	
    public InvoiceDetail(Company company, int productQuantity, Date createdDate, Date lastUpdated, boolean isreturn) {
        this.company = company;
        this.productQuantity = productQuantity;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
        this.isreturn = isreturn;
    }
    public InvoiceDetail(Outlet outlet, ProductVariant productVariant, Company company, InvoiceMain invoiceMain, Product product, BigDecimal itemRetailPrice, BigDecimal itemSalePrice, BigDecimal itemDiscountPrct, BigDecimal itemTaxAmount, BigDecimal itemOrignalAmt, String itemNotes, int productQuantity, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy, boolean isreturn) {
       this.outlet = outlet;
       this.productVariant = productVariant;
       this.company = company;
       this.invoiceMain = invoiceMain;
       this.product = product;
       this.itemRetailPrice = itemRetailPrice;
       this.itemSalePrice = itemSalePrice;
       this.itemDiscountPrct = itemDiscountPrct;
       this.itemTaxAmount = itemTaxAmount;
       this.itemOrignalAmt = itemOrignalAmt;
       this.itemNotes = itemNotes;
       this.productQuantity = productQuantity;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
       this.isreturn = isreturn;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="INVOICE_DETAIL_ID", unique=true, nullable=false)
    public Integer getInvoiceDetailId() {
        return this.invoiceDetailId;
    }
    
    public void setInvoiceDetailId(Integer invoiceDetailId) {
        this.invoiceDetailId = invoiceDetailId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OUTLET_ASSOCICATION_ID")
    public Outlet getOutlet() {
        return this.outlet;
    }
    
    public void setOutlet(Outlet outlet) {
        this.outlet = outlet;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_VARIENT_ASSOCIATION_ID")
    public ProductVariant getProductVariant() {
        return this.productVariant;
    }
    
    public void setProductVariant(ProductVariant productVariant) {
        this.productVariant = productVariant;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="INVOICE_MAIN_ASSOCICATION_ID")
    public InvoiceMain getInvoiceMain() {
        return this.invoiceMain;
    }
    
    public void setInvoiceMain(InvoiceMain invoiceMain) {
        this.invoiceMain = invoiceMain;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ASSOCIATION_ID")
    public Product getProduct() {
        return this.product;
    }
    
    public void setProduct(Product product) {
        this.product = product;
    }

    
    @Column(name="ITEM_RETAIL_PRICE", precision=20)
    public BigDecimal getItemRetailPrice() {
        return this.itemRetailPrice;
    }
    
    public void setItemRetailPrice(BigDecimal itemRetailPrice) {
        this.itemRetailPrice = itemRetailPrice;
    }

    
    @Column(name="ITEM_SALE_PRICE", precision=20)
    public BigDecimal getItemSalePrice() {
        return this.itemSalePrice;
    }
    
    public void setItemSalePrice(BigDecimal itemSalePrice) {
        this.itemSalePrice = itemSalePrice;
    }

    
    @Column(name="ITEM_DISCOUNT_PRCT", precision=20)
    public BigDecimal getItemDiscountPrct() {
        return this.itemDiscountPrct;
    }
    
    public void setItemDiscountPrct(BigDecimal itemDiscountPrct) {
        this.itemDiscountPrct = itemDiscountPrct;
    }

    
    @Column(name="ITEM_TAX_AMOUNT", precision=20)
    public BigDecimal getItemTaxAmount() {
        return this.itemTaxAmount;
    }
    
    public void setItemTaxAmount(BigDecimal itemTaxAmount) {
        this.itemTaxAmount = itemTaxAmount;
    }

    
    @Column(name="ITEM_ORIGNAL_AMT", precision=20)
    public BigDecimal getItemOrignalAmt() {
        return this.itemOrignalAmt;
    }
    
    public void setItemOrignalAmt(BigDecimal itemOrignalAmt) {
        this.itemOrignalAmt = itemOrignalAmt;
    }

    
    @Column(name="ITEM_NOTES", length=256)
    public String getItemNotes() {
        return this.itemNotes;
    }
    
    public void setItemNotes(String itemNotes) {
        this.itemNotes = itemNotes;
    }

    
    @Column(name="PRODUCT_QUANTITY", nullable=false)
    public int getProductQuantity() {
        return this.productQuantity;
    }
    
    public void setProductQuantity(int productQuantity) {
        this.productQuantity = productQuantity;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

    
    @Column(name="ISRETURN", nullable=false)
    public boolean isIsreturn() {
        return this.isreturn;
    }
    
    public void setIsreturn(boolean isreturn) {
        this.isreturn = isreturn;
    }




}


