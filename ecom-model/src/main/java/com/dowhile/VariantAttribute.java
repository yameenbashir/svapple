package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * VariantAttribute generated by hbm2java
 */
@Entity
@Table(name="variant_attribute"
    ,catalog="ecom"
    , uniqueConstraints = @UniqueConstraint(columnNames={"ATTRIBUTE_NAME", "COMPANY_ASSOCIATION_ID"}) 
)
public class VariantAttribute  implements java.io.Serializable {


     private Integer variantAttributeId;
     private User userByCreatedBy;
     private User userByUpdatedBy;
     private Company company;
     private String attributeName;
     private String variantAttributecol;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;
     private int variantAttributeAssociationId;
     private Set<ProductVariant> productVariantsForVariantAttributeAssocicationId3 = new HashSet<ProductVariant>(0);
     private Set<VariantAttributeValues> variantAttributeValueses = new HashSet<VariantAttributeValues>(0);
     private Set<ProductVariant> productVariantsForVariantAttributeAssocicationId1 = new HashSet<ProductVariant>(0);
     private Set<ProductVariant> productVariantsForVariantAttributeAssocicationId2 = new HashSet<ProductVariant>(0);

    public VariantAttribute() {
    }

	
    public VariantAttribute(User userByCreatedBy, User userByUpdatedBy, Company company, String attributeName, boolean activeIndicator, Date createdDate, Date lastUpdated, int variantAttributeAssociationId) {
        this.userByCreatedBy = userByCreatedBy;
        this.userByUpdatedBy = userByUpdatedBy;
        this.company = company;
        this.attributeName = attributeName;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
        this.variantAttributeAssociationId = variantAttributeAssociationId;
    }
    public VariantAttribute(User userByCreatedBy, User userByUpdatedBy, Company company, String attributeName, String variantAttributecol, boolean activeIndicator, Date createdDate, Date lastUpdated, int variantAttributeAssociationId, Set<ProductVariant> productVariantsForVariantAttributeAssocicationId3, Set<VariantAttributeValues> variantAttributeValueses, Set<ProductVariant> productVariantsForVariantAttributeAssocicationId1, Set<ProductVariant> productVariantsForVariantAttributeAssocicationId2) {
       this.userByCreatedBy = userByCreatedBy;
       this.userByUpdatedBy = userByUpdatedBy;
       this.company = company;
       this.attributeName = attributeName;
       this.variantAttributecol = variantAttributecol;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.variantAttributeAssociationId = variantAttributeAssociationId;
       this.productVariantsForVariantAttributeAssocicationId3 = productVariantsForVariantAttributeAssocicationId3;
       this.variantAttributeValueses = variantAttributeValueses;
       this.productVariantsForVariantAttributeAssocicationId1 = productVariantsForVariantAttributeAssocicationId1;
       this.productVariantsForVariantAttributeAssocicationId2 = productVariantsForVariantAttributeAssocicationId2;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="VARIANT_ATTRIBUTE_ID", unique=true, nullable=false)
    public Integer getVariantAttributeId() {
        return this.variantAttributeId;
    }
    
    public void setVariantAttributeId(Integer variantAttributeId) {
        this.variantAttributeId = variantAttributeId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY", nullable=false)
    public User getUserByCreatedBy() {
        return this.userByCreatedBy;
    }
    
    public void setUserByCreatedBy(User userByCreatedBy) {
        this.userByCreatedBy = userByCreatedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="UPDATED_BY", nullable=false)
    public User getUserByUpdatedBy() {
        return this.userByUpdatedBy;
    }
    
    public void setUserByUpdatedBy(User userByUpdatedBy) {
        this.userByUpdatedBy = userByUpdatedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

    
    @Column(name="ATTRIBUTE_NAME", nullable=false, length=200)
    public String getAttributeName() {
        return this.attributeName;
    }
    
    public void setAttributeName(String attributeName) {
        this.attributeName = attributeName;
    }

    
    @Column(name="VARIANT_ATTRIBUTEcol", length=45)
    public String getVariantAttributecol() {
        return this.variantAttributecol;
    }
    
    public void setVariantAttributecol(String variantAttributecol) {
        this.variantAttributecol = variantAttributecol;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="VARIANT_ATTRIBUTE_ASSOCIATION_ID", nullable=false)
    public int getVariantAttributeAssociationId() {
        return this.variantAttributeAssociationId;
    }
    
    public void setVariantAttributeAssociationId(int variantAttributeAssociationId) {
        this.variantAttributeAssociationId = variantAttributeAssociationId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="variantAttributeByVariantAttributeAssocicationId3")
    public Set<ProductVariant> getProductVariantsForVariantAttributeAssocicationId3() {
        return this.productVariantsForVariantAttributeAssocicationId3;
    }
    
    public void setProductVariantsForVariantAttributeAssocicationId3(Set<ProductVariant> productVariantsForVariantAttributeAssocicationId3) {
        this.productVariantsForVariantAttributeAssocicationId3 = productVariantsForVariantAttributeAssocicationId3;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="variantAttribute")
    public Set<VariantAttributeValues> getVariantAttributeValueses() {
        return this.variantAttributeValueses;
    }
    
    public void setVariantAttributeValueses(Set<VariantAttributeValues> variantAttributeValueses) {
        this.variantAttributeValueses = variantAttributeValueses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="variantAttributeByVariantAttributeAssocicationId1")
    public Set<ProductVariant> getProductVariantsForVariantAttributeAssocicationId1() {
        return this.productVariantsForVariantAttributeAssocicationId1;
    }
    
    public void setProductVariantsForVariantAttributeAssocicationId1(Set<ProductVariant> productVariantsForVariantAttributeAssocicationId1) {
        this.productVariantsForVariantAttributeAssocicationId1 = productVariantsForVariantAttributeAssocicationId1;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="variantAttributeByVariantAttributeAssocicationId2")
    public Set<ProductVariant> getProductVariantsForVariantAttributeAssocicationId2() {
        return this.productVariantsForVariantAttributeAssocicationId2;
    }
    
    public void setProductVariantsForVariantAttributeAssocicationId2(Set<ProductVariant> productVariantsForVariantAttributeAssocicationId2) {
        this.productVariantsForVariantAttributeAssocicationId2 = productVariantsForVariantAttributeAssocicationId2;
    }




}


