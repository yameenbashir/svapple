package com.dowhile;

// Generated Dec 5, 2017 5:08:49 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="ecom"
    , uniqueConstraints = @UniqueConstraint(columnNames="USER_EMAIL") 
)
public class User implements java.io.Serializable {


    private Integer userId;
    private Outlet outlet;
    private Company company;
    private Role role;
    private Contact contact;
    private String userEmail;
    private String password;
    private String firstName;
    private String lastName;
    private byte[] image;
    private Date lastLogin;
    private boolean activeIndicator;
    private Date createdDate;
    private Date lastUpdated;
    private Integer createdBy;
    private Integer updatedBy;
    private Set<GeneralLedgerEvent> generalLedgerEventsForUpdatedBy = new HashSet<GeneralLedgerEvent>(0);
    private Set<ChartOfAccount> chartOfAccountsForCreatedBy = new HashSet<ChartOfAccount>(0);
    private Set<ProductPriceHistory> productPriceHistoriesForCreatedBy = new HashSet<ProductPriceHistory>(0);
    private Set<CompositeProduct> compositeProductsForUpdatedBy = new HashSet<CompositeProduct>(0);
    private Set<Tag> tagsForUpdatedBy = new HashSet<Tag>(0);
    private Set<Product> productsForCreatedBy = new HashSet<Product>(0);
    private Set<BankAccount> bankAccountsForCreatedBy = new HashSet<BankAccount>(0);
    private Set<ProductVariant> productVariantsForCreatedBy = new HashSet<ProductVariant>(0);
    private Set<VariantAttribute> variantAttributesForCreatedBy = new HashSet<VariantAttribute>(0);
    private Set<ProductVariant> productVariantsForUpdatedBy = new HashSet<ProductVariant>(0);
    private Set<ActivityDetail> activityDetailsForEmployeeAssociationId = new HashSet<ActivityDetail>(0);
    private Set<AccountType> accountTypesForCreatedBy = new HashSet<AccountType>(0);
    private Set<CompositeProductHistory> compositeProductHistoriesForCreatedBy = new HashSet<CompositeProductHistory>(0);
    private Set<ProductPriceHistory> productPriceHistoriesForUpdatedBy = new HashSet<ProductPriceHistory>(0);
    private Set<PriceBook> priceBooksForUpdatedBy = new HashSet<PriceBook>(0);
    private Set<Module> modulesForUpdatedBy = new HashSet<Module>(0);
    private Set<WebActivityDetail> webActivityDetailsForCreatedByManagerId = new HashSet<WebActivityDetail>(0);
    private Set<Module> modulesForCreatedBy = new HashSet<Module>(0);
    private Set<ProductTag> productTagsForCreatedBy = new HashSet<ProductTag>(0);
    private Set<GeneralLedger> generalLedgersForUpdatedBy = new HashSet<GeneralLedger>(0);
    private Set<ProductTag> productTagsForUpdatedBy = new HashSet<ProductTag>(0);
    private Set<GeneralLedger> generalLedgersForCreatedBy = new HashSet<GeneralLedger>(0);
    private Set<PriceBook> priceBooksForCreatedBy = new HashSet<PriceBook>(0);
    private Set<AccountType> accountTypesForUpdatedBy = new HashSet<AccountType>(0);
    private Set<Configuration> configurationsForUpdatedBy = new HashSet<Configuration>(0);
    private Set<ActivityDetail> activityDetailsForCreatedByManagerId = new HashSet<ActivityDetail>(0);
    private Set<UserOutlets> userOutletsesForCreatedBy = new HashSet<UserOutlets>(0);
    private Set<VariantAttributeValues> variantAttributeValuesesForCreatedBy = new HashSet<VariantAttributeValues>(0);
    private Set<ProductHistory> productHistories = new HashSet<ProductHistory>(0);
    private Set<CompositeProductHistory> compositeProductHistoriesForUpdatedBy = new HashSet<CompositeProductHistory>(0);
    private Set<GlTransConfig> glTransConfigsForCreatedBy = new HashSet<GlTransConfig>(0);
    private Set<PriceBookDetail> priceBookDetailsForUpdatedBy = new HashSet<PriceBookDetail>(0);
    private Set<VariantAttribute> variantAttributesForUpdatedBy = new HashSet<VariantAttribute>(0);
    private Set<PriceBookDetail> priceBookDetailsForCreatedBy = new HashSet<PriceBookDetail>(0);
    private Set<GlTransConfig> glTransConfigsForUpdatedBy = new HashSet<GlTransConfig>(0);
    private Set<VariantAttributeValues> variantAttributeValuesesForUpdatedBy = new HashSet<VariantAttributeValues>(0);
    private Set<UserOutlets> userOutletsesForUpdatedBy = new HashSet<UserOutlets>(0);
    private Set<UserOutlets> userOutletsesForUserAssociationId = new HashSet<UserOutlets>(0);
    private Set<GeneralLedgerEvent> generalLedgerEventsForCreatedBy = new HashSet<GeneralLedgerEvent>(0);
    private Set<Ticket> ticketsForResolvedBy = new HashSet<Ticket>(0);
    private Set<BankAccount> bankAccountsForUpdatedBy = new HashSet<BankAccount>(0);
    private Set<Product> productsForUpdatedBy = new HashSet<Product>(0);
    private Set<Tag> tagsForCreatedBy = new HashSet<Tag>(0);
    private Set<Announcement> announcementsForUpdatedBy = new HashSet<Announcement>(0);
    private Set<Announcement> announcementsForCreatedBy = new HashSet<Announcement>(0);
    private Set<Ticket> ticketsForCreatedBy = new HashSet<Ticket>(0);
    private Set<WebActivityDetail> webActivityDetailsForEmployeeAssociationId = new HashSet<WebActivityDetail>(0);
    private Set<CompositeProduct> compositeProductsForCreatedBy = new HashSet<CompositeProduct>(0);
    private Set<Configuration> configurationsForCreatedBy = new HashSet<Configuration>(0);
    private Set<ChartOfAccount> chartOfAccountsForUpdatedBy = new HashSet<ChartOfAccount>(0);

   public User() {
   }

	
   public User(Company company, Role role, String userEmail, String password, String firstName, String lastName, Date lastLogin, boolean activeIndicator, Date createdDate, Date lastUpdated) {
       this.company = company;
       this.role = role;
       this.userEmail = userEmail;
       this.password = password;
       this.firstName = firstName;
       this.lastName = lastName;
       this.lastLogin = lastLogin;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
   }
   public User(Outlet outlet, Company company, Role role, Contact contact, String userEmail, String password, String firstName, String lastName, byte[] image, Date lastLogin, boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy, Set<GeneralLedgerEvent> generalLedgerEventsForUpdatedBy, Set<ChartOfAccount> chartOfAccountsForCreatedBy, Set<ProductPriceHistory> productPriceHistoriesForCreatedBy, Set<CompositeProduct> compositeProductsForUpdatedBy, Set<Tag> tagsForUpdatedBy, Set<Product> productsForCreatedBy, Set<BankAccount> bankAccountsForCreatedBy, Set<ProductVariant> productVariantsForCreatedBy, Set<VariantAttribute> variantAttributesForCreatedBy, Set<ProductVariant> productVariantsForUpdatedBy, Set<ActivityDetail> activityDetailsForEmployeeAssociationId, Set<AccountType> accountTypesForCreatedBy, Set<CompositeProductHistory> compositeProductHistoriesForCreatedBy, Set<ProductPriceHistory> productPriceHistoriesForUpdatedBy, Set<PriceBook> priceBooksForUpdatedBy, Set<Module> modulesForUpdatedBy, Set<WebActivityDetail> webActivityDetailsForCreatedByManagerId, Set<Module> modulesForCreatedBy, Set<ProductTag> productTagsForCreatedBy, Set<GeneralLedger> generalLedgersForUpdatedBy, Set<ProductTag> productTagsForUpdatedBy, Set<GeneralLedger> generalLedgersForCreatedBy, Set<PriceBook> priceBooksForCreatedBy, Set<AccountType> accountTypesForUpdatedBy, Set<Configuration> configurationsForUpdatedBy, Set<ActivityDetail> activityDetailsForCreatedByManagerId, Set<UserOutlets> userOutletsesForCreatedBy, Set<VariantAttributeValues> variantAttributeValuesesForCreatedBy, Set<ProductHistory> productHistories, Set<CompositeProductHistory> compositeProductHistoriesForUpdatedBy, Set<GlTransConfig> glTransConfigsForCreatedBy, Set<PriceBookDetail> priceBookDetailsForUpdatedBy, Set<VariantAttribute> variantAttributesForUpdatedBy, Set<PriceBookDetail> priceBookDetailsForCreatedBy, Set<GlTransConfig> glTransConfigsForUpdatedBy, Set<VariantAttributeValues> variantAttributeValuesesForUpdatedBy, Set<UserOutlets> userOutletsesForUpdatedBy, Set<UserOutlets> userOutletsesForUserAssociationId, Set<GeneralLedgerEvent> generalLedgerEventsForCreatedBy, Set<Ticket> ticketsForResolvedBy, Set<BankAccount> bankAccountsForUpdatedBy, Set<Product> productsForUpdatedBy, Set<Tag> tagsForCreatedBy, Set<Announcement> announcementsForUpdatedBy, Set<Announcement> announcementsForCreatedBy, Set<Ticket> ticketsForCreatedBy, Set<WebActivityDetail> webActivityDetailsForEmployeeAssociationId, Set<CompositeProduct> compositeProductsForCreatedBy, Set<Configuration> configurationsForCreatedBy, Set<ChartOfAccount> chartOfAccountsForUpdatedBy) {
      this.outlet = outlet;
      this.company = company;
      this.role = role;
      this.contact = contact;
      this.userEmail = userEmail;
      this.password = password;
      this.firstName = firstName;
      this.lastName = lastName;
      this.image = image;
      this.lastLogin = lastLogin;
      this.activeIndicator = activeIndicator;
      this.createdDate = createdDate;
      this.lastUpdated = lastUpdated;
      this.createdBy = createdBy;
      this.updatedBy = updatedBy;
      this.generalLedgerEventsForUpdatedBy = generalLedgerEventsForUpdatedBy;
      this.chartOfAccountsForCreatedBy = chartOfAccountsForCreatedBy;
      this.productPriceHistoriesForCreatedBy = productPriceHistoriesForCreatedBy;
      this.compositeProductsForUpdatedBy = compositeProductsForUpdatedBy;
      this.tagsForUpdatedBy = tagsForUpdatedBy;
      this.productsForCreatedBy = productsForCreatedBy;
      this.bankAccountsForCreatedBy = bankAccountsForCreatedBy;
      this.productVariantsForCreatedBy = productVariantsForCreatedBy;
      this.variantAttributesForCreatedBy = variantAttributesForCreatedBy;
      this.productVariantsForUpdatedBy = productVariantsForUpdatedBy;
      this.activityDetailsForEmployeeAssociationId = activityDetailsForEmployeeAssociationId;
      this.accountTypesForCreatedBy = accountTypesForCreatedBy;
      this.compositeProductHistoriesForCreatedBy = compositeProductHistoriesForCreatedBy;
      this.productPriceHistoriesForUpdatedBy = productPriceHistoriesForUpdatedBy;
      this.priceBooksForUpdatedBy = priceBooksForUpdatedBy;
      this.modulesForUpdatedBy = modulesForUpdatedBy;
      this.webActivityDetailsForCreatedByManagerId = webActivityDetailsForCreatedByManagerId;
      this.modulesForCreatedBy = modulesForCreatedBy;
      this.productTagsForCreatedBy = productTagsForCreatedBy;
      this.generalLedgersForUpdatedBy = generalLedgersForUpdatedBy;
      this.productTagsForUpdatedBy = productTagsForUpdatedBy;
      this.generalLedgersForCreatedBy = generalLedgersForCreatedBy;
      this.priceBooksForCreatedBy = priceBooksForCreatedBy;
      this.accountTypesForUpdatedBy = accountTypesForUpdatedBy;
      this.configurationsForUpdatedBy = configurationsForUpdatedBy;
      this.activityDetailsForCreatedByManagerId = activityDetailsForCreatedByManagerId;
      this.userOutletsesForCreatedBy = userOutletsesForCreatedBy;
      this.variantAttributeValuesesForCreatedBy = variantAttributeValuesesForCreatedBy;
      this.productHistories = productHistories;
      this.compositeProductHistoriesForUpdatedBy = compositeProductHistoriesForUpdatedBy;
      this.glTransConfigsForCreatedBy = glTransConfigsForCreatedBy;
      this.priceBookDetailsForUpdatedBy = priceBookDetailsForUpdatedBy;
      this.variantAttributesForUpdatedBy = variantAttributesForUpdatedBy;
      this.priceBookDetailsForCreatedBy = priceBookDetailsForCreatedBy;
      this.glTransConfigsForUpdatedBy = glTransConfigsForUpdatedBy;
      this.variantAttributeValuesesForUpdatedBy = variantAttributeValuesesForUpdatedBy;
      this.userOutletsesForUpdatedBy = userOutletsesForUpdatedBy;
      this.userOutletsesForUserAssociationId = userOutletsesForUserAssociationId;
      this.generalLedgerEventsForCreatedBy = generalLedgerEventsForCreatedBy;
      this.ticketsForResolvedBy = ticketsForResolvedBy;
      this.bankAccountsForUpdatedBy = bankAccountsForUpdatedBy;
      this.productsForUpdatedBy = productsForUpdatedBy;
      this.tagsForCreatedBy = tagsForCreatedBy;
      this.announcementsForUpdatedBy = announcementsForUpdatedBy;
      this.announcementsForCreatedBy = announcementsForCreatedBy;
      this.ticketsForCreatedBy = ticketsForCreatedBy;
      this.webActivityDetailsForEmployeeAssociationId = webActivityDetailsForEmployeeAssociationId;
      this.compositeProductsForCreatedBy = compositeProductsForCreatedBy;
      this.configurationsForCreatedBy = configurationsForCreatedBy;
      this.chartOfAccountsForUpdatedBy = chartOfAccountsForUpdatedBy;
   }
  
    @Id @GeneratedValue(strategy=IDENTITY)

   
   @Column(name="USER_ID", unique=true, nullable=false)
   public Integer getUserId() {
       return this.userId;
   }
   
   public void setUserId(Integer userId) {
       this.userId = userId;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="OUTLET_ASSOCICATION_ID")
   public Outlet getOutlet() {
       return this.outlet;
   }
   
   public void setOutlet(Outlet outlet) {
       this.outlet = outlet;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
   public Company getCompany() {
       return this.company;
   }
   
   public void setCompany(Company company) {
       this.company = company;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="ROLE_ASSOCIATION_ID", nullable=false)
   public Role getRole() {
       return this.role;
   }
   
   public void setRole(Role role) {
       this.role = role;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="CONTACT_ASSOCICATION_ID")
   public Contact getContact() {
       return this.contact;
   }
   
   public void setContact(Contact contact) {
       this.contact = contact;
   }

   
   @Column(name="USER_EMAIL", unique=true, nullable=false, length=256)
   public String getUserEmail() {
       return this.userEmail;
   }
   
   public void setUserEmail(String userEmail) {
       this.userEmail = userEmail;
   }

   
   @Column(name="PASSWORD", nullable=false, length=50)
   public String getPassword() {
       return this.password;
   }
   
   public void setPassword(String password) {
       this.password = password;
   }

   
   @Column(name="FIRST_NAME", nullable=false, length=256)
   public String getFirstName() {
       return this.firstName;
   }
   
   public void setFirstName(String firstName) {
       this.firstName = firstName;
   }

   
   @Column(name="LAST_NAME", nullable=false, length=256)
   public String getLastName() {
       return this.lastName;
   }
   
   public void setLastName(String lastName) {
       this.lastName = lastName;
   }

   
   @Column(name="IMAGE")
   public byte[] getImage() {
       return this.image;
   }
   
   public void setImage(byte[] image) {
       this.image = image;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name="LAST_LOGIN", nullable=false, length=19)
   public Date getLastLogin() {
       return this.lastLogin;
   }
   
   public void setLastLogin(Date lastLogin) {
       this.lastLogin = lastLogin;
   }

   
   @Column(name="ACTIVE_INDICATOR", nullable=false)
   public boolean isActiveIndicator() {
       return this.activeIndicator;
   }
   
   public void setActiveIndicator(boolean activeIndicator) {
       this.activeIndicator = activeIndicator;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name="CREATED_DATE", nullable=false, length=19)
   public Date getCreatedDate() {
       return this.createdDate;
   }
   
   public void setCreatedDate(Date createdDate) {
       this.createdDate = createdDate;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name="LAST_UPDATED", nullable=false, length=19)
   public Date getLastUpdated() {
       return this.lastUpdated;
   }
   
   public void setLastUpdated(Date lastUpdated) {
       this.lastUpdated = lastUpdated;
   }

   
   @Column(name="CREATED_BY")
   public Integer getCreatedBy() {
       return this.createdBy;
   }
   
   public void setCreatedBy(Integer createdBy) {
       this.createdBy = createdBy;
   }

   
   @Column(name="UPDATED_BY")
   public Integer getUpdatedBy() {
       return this.updatedBy;
   }
   
   public void setUpdatedBy(Integer updatedBy) {
       this.updatedBy = updatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<GeneralLedgerEvent> getGeneralLedgerEventsForUpdatedBy() {
       return this.generalLedgerEventsForUpdatedBy;
   }
   
   public void setGeneralLedgerEventsForUpdatedBy(Set<GeneralLedgerEvent> generalLedgerEventsForUpdatedBy) {
       this.generalLedgerEventsForUpdatedBy = generalLedgerEventsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<ChartOfAccount> getChartOfAccountsForCreatedBy() {
       return this.chartOfAccountsForCreatedBy;
   }
   
   public void setChartOfAccountsForCreatedBy(Set<ChartOfAccount> chartOfAccountsForCreatedBy) {
       this.chartOfAccountsForCreatedBy = chartOfAccountsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<ProductPriceHistory> getProductPriceHistoriesForCreatedBy() {
       return this.productPriceHistoriesForCreatedBy;
   }
   
   public void setProductPriceHistoriesForCreatedBy(Set<ProductPriceHistory> productPriceHistoriesForCreatedBy) {
       this.productPriceHistoriesForCreatedBy = productPriceHistoriesForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<CompositeProduct> getCompositeProductsForUpdatedBy() {
       return this.compositeProductsForUpdatedBy;
   }
   
   public void setCompositeProductsForUpdatedBy(Set<CompositeProduct> compositeProductsForUpdatedBy) {
       this.compositeProductsForUpdatedBy = compositeProductsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<Tag> getTagsForUpdatedBy() {
       return this.tagsForUpdatedBy;
   }
   
   public void setTagsForUpdatedBy(Set<Tag> tagsForUpdatedBy) {
       this.tagsForUpdatedBy = tagsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<Product> getProductsForCreatedBy() {
       return this.productsForCreatedBy;
   }
   
   public void setProductsForCreatedBy(Set<Product> productsForCreatedBy) {
       this.productsForCreatedBy = productsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<BankAccount> getBankAccountsForCreatedBy() {
       return this.bankAccountsForCreatedBy;
   }
   
   public void setBankAccountsForCreatedBy(Set<BankAccount> bankAccountsForCreatedBy) {
       this.bankAccountsForCreatedBy = bankAccountsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<ProductVariant> getProductVariantsForCreatedBy() {
       return this.productVariantsForCreatedBy;
   }
   
   public void setProductVariantsForCreatedBy(Set<ProductVariant> productVariantsForCreatedBy) {
       this.productVariantsForCreatedBy = productVariantsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<VariantAttribute> getVariantAttributesForCreatedBy() {
       return this.variantAttributesForCreatedBy;
   }
   
   public void setVariantAttributesForCreatedBy(Set<VariantAttribute> variantAttributesForCreatedBy) {
       this.variantAttributesForCreatedBy = variantAttributesForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<ProductVariant> getProductVariantsForUpdatedBy() {
       return this.productVariantsForUpdatedBy;
   }
   
   public void setProductVariantsForUpdatedBy(Set<ProductVariant> productVariantsForUpdatedBy) {
       this.productVariantsForUpdatedBy = productVariantsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByEmployeeAssociationId")
   public Set<ActivityDetail> getActivityDetailsForEmployeeAssociationId() {
       return this.activityDetailsForEmployeeAssociationId;
   }
   
   public void setActivityDetailsForEmployeeAssociationId(Set<ActivityDetail> activityDetailsForEmployeeAssociationId) {
       this.activityDetailsForEmployeeAssociationId = activityDetailsForEmployeeAssociationId;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<AccountType> getAccountTypesForCreatedBy() {
       return this.accountTypesForCreatedBy;
   }
   
   public void setAccountTypesForCreatedBy(Set<AccountType> accountTypesForCreatedBy) {
       this.accountTypesForCreatedBy = accountTypesForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<CompositeProductHistory> getCompositeProductHistoriesForCreatedBy() {
       return this.compositeProductHistoriesForCreatedBy;
   }
   
   public void setCompositeProductHistoriesForCreatedBy(Set<CompositeProductHistory> compositeProductHistoriesForCreatedBy) {
       this.compositeProductHistoriesForCreatedBy = compositeProductHistoriesForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<ProductPriceHistory> getProductPriceHistoriesForUpdatedBy() {
       return this.productPriceHistoriesForUpdatedBy;
   }
   
   public void setProductPriceHistoriesForUpdatedBy(Set<ProductPriceHistory> productPriceHistoriesForUpdatedBy) {
       this.productPriceHistoriesForUpdatedBy = productPriceHistoriesForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<PriceBook> getPriceBooksForUpdatedBy() {
       return this.priceBooksForUpdatedBy;
   }
   
   public void setPriceBooksForUpdatedBy(Set<PriceBook> priceBooksForUpdatedBy) {
       this.priceBooksForUpdatedBy = priceBooksForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<Module> getModulesForUpdatedBy() {
       return this.modulesForUpdatedBy;
   }
   
   public void setModulesForUpdatedBy(Set<Module> modulesForUpdatedBy) {
       this.modulesForUpdatedBy = modulesForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedByManagerId")
   public Set<WebActivityDetail> getWebActivityDetailsForCreatedByManagerId() {
       return this.webActivityDetailsForCreatedByManagerId;
   }
   
   public void setWebActivityDetailsForCreatedByManagerId(Set<WebActivityDetail> webActivityDetailsForCreatedByManagerId) {
       this.webActivityDetailsForCreatedByManagerId = webActivityDetailsForCreatedByManagerId;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<Module> getModulesForCreatedBy() {
       return this.modulesForCreatedBy;
   }
   
   public void setModulesForCreatedBy(Set<Module> modulesForCreatedBy) {
       this.modulesForCreatedBy = modulesForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<ProductTag> getProductTagsForCreatedBy() {
       return this.productTagsForCreatedBy;
   }
   
   public void setProductTagsForCreatedBy(Set<ProductTag> productTagsForCreatedBy) {
       this.productTagsForCreatedBy = productTagsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<GeneralLedger> getGeneralLedgersForUpdatedBy() {
       return this.generalLedgersForUpdatedBy;
   }
   
   public void setGeneralLedgersForUpdatedBy(Set<GeneralLedger> generalLedgersForUpdatedBy) {
       this.generalLedgersForUpdatedBy = generalLedgersForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<ProductTag> getProductTagsForUpdatedBy() {
       return this.productTagsForUpdatedBy;
   }
   
   public void setProductTagsForUpdatedBy(Set<ProductTag> productTagsForUpdatedBy) {
       this.productTagsForUpdatedBy = productTagsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<GeneralLedger> getGeneralLedgersForCreatedBy() {
       return this.generalLedgersForCreatedBy;
   }
   
   public void setGeneralLedgersForCreatedBy(Set<GeneralLedger> generalLedgersForCreatedBy) {
       this.generalLedgersForCreatedBy = generalLedgersForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<PriceBook> getPriceBooksForCreatedBy() {
       return this.priceBooksForCreatedBy;
   }
   
   public void setPriceBooksForCreatedBy(Set<PriceBook> priceBooksForCreatedBy) {
       this.priceBooksForCreatedBy = priceBooksForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<AccountType> getAccountTypesForUpdatedBy() {
       return this.accountTypesForUpdatedBy;
   }
   
   public void setAccountTypesForUpdatedBy(Set<AccountType> accountTypesForUpdatedBy) {
       this.accountTypesForUpdatedBy = accountTypesForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<Configuration> getConfigurationsForUpdatedBy() {
       return this.configurationsForUpdatedBy;
   }
   
   public void setConfigurationsForUpdatedBy(Set<Configuration> configurationsForUpdatedBy) {
       this.configurationsForUpdatedBy = configurationsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedByManagerId")
   public Set<ActivityDetail> getActivityDetailsForCreatedByManagerId() {
       return this.activityDetailsForCreatedByManagerId;
   }
   
   public void setActivityDetailsForCreatedByManagerId(Set<ActivityDetail> activityDetailsForCreatedByManagerId) {
       this.activityDetailsForCreatedByManagerId = activityDetailsForCreatedByManagerId;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<UserOutlets> getUserOutletsesForCreatedBy() {
       return this.userOutletsesForCreatedBy;
   }
   
   public void setUserOutletsesForCreatedBy(Set<UserOutlets> userOutletsesForCreatedBy) {
       this.userOutletsesForCreatedBy = userOutletsesForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<VariantAttributeValues> getVariantAttributeValuesesForCreatedBy() {
       return this.variantAttributeValuesesForCreatedBy;
   }
   
   public void setVariantAttributeValuesesForCreatedBy(Set<VariantAttributeValues> variantAttributeValuesesForCreatedBy) {
       this.variantAttributeValuesesForCreatedBy = variantAttributeValuesesForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
   public Set<ProductHistory> getProductHistories() {
       return this.productHistories;
   }
   
   public void setProductHistories(Set<ProductHistory> productHistories) {
       this.productHistories = productHistories;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<CompositeProductHistory> getCompositeProductHistoriesForUpdatedBy() {
       return this.compositeProductHistoriesForUpdatedBy;
   }
   
   public void setCompositeProductHistoriesForUpdatedBy(Set<CompositeProductHistory> compositeProductHistoriesForUpdatedBy) {
       this.compositeProductHistoriesForUpdatedBy = compositeProductHistoriesForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<GlTransConfig> getGlTransConfigsForCreatedBy() {
       return this.glTransConfigsForCreatedBy;
   }
   
   public void setGlTransConfigsForCreatedBy(Set<GlTransConfig> glTransConfigsForCreatedBy) {
       this.glTransConfigsForCreatedBy = glTransConfigsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<PriceBookDetail> getPriceBookDetailsForUpdatedBy() {
       return this.priceBookDetailsForUpdatedBy;
   }
   
   public void setPriceBookDetailsForUpdatedBy(Set<PriceBookDetail> priceBookDetailsForUpdatedBy) {
       this.priceBookDetailsForUpdatedBy = priceBookDetailsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<VariantAttribute> getVariantAttributesForUpdatedBy() {
       return this.variantAttributesForUpdatedBy;
   }
   
   public void setVariantAttributesForUpdatedBy(Set<VariantAttribute> variantAttributesForUpdatedBy) {
       this.variantAttributesForUpdatedBy = variantAttributesForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<PriceBookDetail> getPriceBookDetailsForCreatedBy() {
       return this.priceBookDetailsForCreatedBy;
   }
   
   public void setPriceBookDetailsForCreatedBy(Set<PriceBookDetail> priceBookDetailsForCreatedBy) {
       this.priceBookDetailsForCreatedBy = priceBookDetailsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<GlTransConfig> getGlTransConfigsForUpdatedBy() {
       return this.glTransConfigsForUpdatedBy;
   }
   
   public void setGlTransConfigsForUpdatedBy(Set<GlTransConfig> glTransConfigsForUpdatedBy) {
       this.glTransConfigsForUpdatedBy = glTransConfigsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<VariantAttributeValues> getVariantAttributeValuesesForUpdatedBy() {
       return this.variantAttributeValuesesForUpdatedBy;
   }
   
   public void setVariantAttributeValuesesForUpdatedBy(Set<VariantAttributeValues> variantAttributeValuesesForUpdatedBy) {
       this.variantAttributeValuesesForUpdatedBy = variantAttributeValuesesForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<UserOutlets> getUserOutletsesForUpdatedBy() {
       return this.userOutletsesForUpdatedBy;
   }
   
   public void setUserOutletsesForUpdatedBy(Set<UserOutlets> userOutletsesForUpdatedBy) {
       this.userOutletsesForUpdatedBy = userOutletsesForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUserAssociationId")
   public Set<UserOutlets> getUserOutletsesForUserAssociationId() {
       return this.userOutletsesForUserAssociationId;
   }
   
   public void setUserOutletsesForUserAssociationId(Set<UserOutlets> userOutletsesForUserAssociationId) {
       this.userOutletsesForUserAssociationId = userOutletsesForUserAssociationId;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<GeneralLedgerEvent> getGeneralLedgerEventsForCreatedBy() {
       return this.generalLedgerEventsForCreatedBy;
   }
   
   public void setGeneralLedgerEventsForCreatedBy(Set<GeneralLedgerEvent> generalLedgerEventsForCreatedBy) {
       this.generalLedgerEventsForCreatedBy = generalLedgerEventsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByResolvedBy")
   public Set<Ticket> getTicketsForResolvedBy() {
       return this.ticketsForResolvedBy;
   }
   
   public void setTicketsForResolvedBy(Set<Ticket> ticketsForResolvedBy) {
       this.ticketsForResolvedBy = ticketsForResolvedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<BankAccount> getBankAccountsForUpdatedBy() {
       return this.bankAccountsForUpdatedBy;
   }
   
   public void setBankAccountsForUpdatedBy(Set<BankAccount> bankAccountsForUpdatedBy) {
       this.bankAccountsForUpdatedBy = bankAccountsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<Product> getProductsForUpdatedBy() {
       return this.productsForUpdatedBy;
   }
   
   public void setProductsForUpdatedBy(Set<Product> productsForUpdatedBy) {
       this.productsForUpdatedBy = productsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<Tag> getTagsForCreatedBy() {
       return this.tagsForCreatedBy;
   }
   
   public void setTagsForCreatedBy(Set<Tag> tagsForCreatedBy) {
       this.tagsForCreatedBy = tagsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<Announcement> getAnnouncementsForUpdatedBy() {
       return this.announcementsForUpdatedBy;
   }
   
   public void setAnnouncementsForUpdatedBy(Set<Announcement> announcementsForUpdatedBy) {
       this.announcementsForUpdatedBy = announcementsForUpdatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<Announcement> getAnnouncementsForCreatedBy() {
       return this.announcementsForCreatedBy;
   }
   
   public void setAnnouncementsForCreatedBy(Set<Announcement> announcementsForCreatedBy) {
       this.announcementsForCreatedBy = announcementsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<Ticket> getTicketsForCreatedBy() {
       return this.ticketsForCreatedBy;
   }
   
   public void setTicketsForCreatedBy(Set<Ticket> ticketsForCreatedBy) {
       this.ticketsForCreatedBy = ticketsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByEmployeeAssociationId")
   public Set<WebActivityDetail> getWebActivityDetailsForEmployeeAssociationId() {
       return this.webActivityDetailsForEmployeeAssociationId;
   }
   
   public void setWebActivityDetailsForEmployeeAssociationId(Set<WebActivityDetail> webActivityDetailsForEmployeeAssociationId) {
       this.webActivityDetailsForEmployeeAssociationId = webActivityDetailsForEmployeeAssociationId;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<CompositeProduct> getCompositeProductsForCreatedBy() {
       return this.compositeProductsForCreatedBy;
   }
   
   public void setCompositeProductsForCreatedBy(Set<CompositeProduct> compositeProductsForCreatedBy) {
       this.compositeProductsForCreatedBy = compositeProductsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByCreatedBy")
   public Set<Configuration> getConfigurationsForCreatedBy() {
       return this.configurationsForCreatedBy;
   }
   
   public void setConfigurationsForCreatedBy(Set<Configuration> configurationsForCreatedBy) {
       this.configurationsForCreatedBy = configurationsForCreatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUpdatedBy")
   public Set<ChartOfAccount> getChartOfAccountsForUpdatedBy() {
       return this.chartOfAccountsForUpdatedBy;
   }
   
   public void setChartOfAccountsForUpdatedBy(Set<ChartOfAccount> chartOfAccountsForUpdatedBy) {
       this.chartOfAccountsForUpdatedBy = chartOfAccountsForUpdatedBy;
   }




}
