package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OrderMain generated by hbm2java
 */
@Entity
@Table(name="order_main"
    ,catalog="ecom"
)
public class OrderMain  implements java.io.Serializable {


     private Integer orderMainId;
     private Contact contact;
     private Outlet outlet;
     private PaymentType paymentType;
     private DeliveryMethod deliveryMethod;
     private Company company;
     private Status status;
     private String orderRefNbr;
     private String orderTrackingNbr;
     private String orderNotes;
     private Date orderGenerationDte;
     private Date orderCancelDte;
     private Date orderExpectedDeliveryDte;
     private Date orderDeliveryDte;
     private BigDecimal orderBillAmt;
     private BigDecimal taxAmt;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;
     private Integer createdBy;
     private Integer updatedBy;
     private Set<InvoiceMain> invoiceMains = new HashSet<InvoiceMain>(0);
     private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);

    public OrderMain() {
    }

	
    public OrderMain(PaymentType paymentType, DeliveryMethod deliveryMethod, Company company, Status status, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.paymentType = paymentType;
        this.deliveryMethod = deliveryMethod;
        this.company = company;
        this.status = status;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public OrderMain(Contact contact, Outlet outlet, PaymentType paymentType, DeliveryMethod deliveryMethod, Company company, Status status, String orderRefNbr, String orderTrackingNbr, String orderNotes, Date orderGenerationDte, Date orderCancelDte, Date orderExpectedDeliveryDte, Date orderDeliveryDte, BigDecimal orderBillAmt, BigDecimal taxAmt, boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy, Set<InvoiceMain> invoiceMains, Set<OrderDetail> orderDetails) {
       this.contact = contact;
       this.outlet = outlet;
       this.paymentType = paymentType;
       this.deliveryMethod = deliveryMethod;
       this.company = company;
       this.status = status;
       this.orderRefNbr = orderRefNbr;
       this.orderTrackingNbr = orderTrackingNbr;
       this.orderNotes = orderNotes;
       this.orderGenerationDte = orderGenerationDte;
       this.orderCancelDte = orderCancelDte;
       this.orderExpectedDeliveryDte = orderExpectedDeliveryDte;
       this.orderDeliveryDte = orderDeliveryDte;
       this.orderBillAmt = orderBillAmt;
       this.taxAmt = taxAmt;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
       this.invoiceMains = invoiceMains;
       this.orderDetails = orderDetails;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ORDER_MAIN_ID", unique=true, nullable=false)
    public Integer getOrderMainId() {
        return this.orderMainId;
    }
    
    public void setOrderMainId(Integer orderMainId) {
        this.orderMainId = orderMainId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_ASSOCIATION_ID")
    public Contact getContact() {
        return this.contact;
    }
    
    public void setContact(Contact contact) {
        this.contact = contact;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OUTLET_ASSOCICATION_ID")
    public Outlet getOutlet() {
        return this.outlet;
    }
    
    public void setOutlet(Outlet outlet) {
        this.outlet = outlet;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAYMENT_TYPE_ASSOCICATION_ID", nullable=false)
    public PaymentType getPaymentType() {
        return this.paymentType;
    }
    
    public void setPaymentType(PaymentType paymentType) {
        this.paymentType = paymentType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DELIVER_METHOD_ASSOCICATION_ID", nullable=false)
    public DeliveryMethod getDeliveryMethod() {
        return this.deliveryMethod;
    }
    
    public void setDeliveryMethod(DeliveryMethod deliveryMethod) {
        this.deliveryMethod = deliveryMethod;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ASSOCICATION_ID", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="ORDER_REF_NBR", length=200)
    public String getOrderRefNbr() {
        return this.orderRefNbr;
    }
    
    public void setOrderRefNbr(String orderRefNbr) {
        this.orderRefNbr = orderRefNbr;
    }

    
    @Column(name="ORDER_TRACKING_NBR", length=200)
    public String getOrderTrackingNbr() {
        return this.orderTrackingNbr;
    }
    
    public void setOrderTrackingNbr(String orderTrackingNbr) {
        this.orderTrackingNbr = orderTrackingNbr;
    }

    
    @Column(name="ORDER_NOTES", length=500)
    public String getOrderNotes() {
        return this.orderNotes;
    }
    
    public void setOrderNotes(String orderNotes) {
        this.orderNotes = orderNotes;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ORDER_GENERATION_DTE", length=19)
    public Date getOrderGenerationDte() {
        return this.orderGenerationDte;
    }
    
    public void setOrderGenerationDte(Date orderGenerationDte) {
        this.orderGenerationDte = orderGenerationDte;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ORDER_CANCEL_DTE", length=19)
    public Date getOrderCancelDte() {
        return this.orderCancelDte;
    }
    
    public void setOrderCancelDte(Date orderCancelDte) {
        this.orderCancelDte = orderCancelDte;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ORDER_EXPECTED_DELIVERY_DTE", length=19)
    public Date getOrderExpectedDeliveryDte() {
        return this.orderExpectedDeliveryDte;
    }
    
    public void setOrderExpectedDeliveryDte(Date orderExpectedDeliveryDte) {
        this.orderExpectedDeliveryDte = orderExpectedDeliveryDte;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ORDER_DELIVERY_DTE", length=19)
    public Date getOrderDeliveryDte() {
        return this.orderDeliveryDte;
    }
    
    public void setOrderDeliveryDte(Date orderDeliveryDte) {
        this.orderDeliveryDte = orderDeliveryDte;
    }

    
    @Column(name="ORDER_BILL_AMT", precision=21, scale=5)
    public BigDecimal getOrderBillAmt() {
        return this.orderBillAmt;
    }
    
    public void setOrderBillAmt(BigDecimal orderBillAmt) {
        this.orderBillAmt = orderBillAmt;
    }

    
    @Column(name="TAX_AMT", precision=21, scale=5)
    public BigDecimal getTaxAmt() {
        return this.taxAmt;
    }
    
    public void setTaxAmt(BigDecimal taxAmt) {
        this.taxAmt = taxAmt;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="orderMain")
    public Set<InvoiceMain> getInvoiceMains() {
        return this.invoiceMains;
    }
    
    public void setInvoiceMains(Set<InvoiceMain> invoiceMains) {
        this.invoiceMains = invoiceMains;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="orderMain")
    public Set<OrderDetail> getOrderDetails() {
        return this.orderDetails;
    }
    
    public void setOrderDetails(Set<OrderDetail> orderDetails) {
        this.orderDetails = orderDetails;
    }




}


