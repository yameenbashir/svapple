package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Register generated by hbm2java
 */
@Entity
@Table(name="register"
    ,catalog="ecom"
)
public class Register  implements java.io.Serializable {


     private Integer registerId;
     private Outlet outlet;
     private Company company;
     private String registerName;
     private String cacheManagementEnable;
     private String receiptNumber;
     private String receiptPrefix;
     private String receiptSufix;
     private String selectNextUserForSale;
     private String emailReceipt;
     private String printReceipt;
     private String notes;
     private String printNotesOnReceipt;
     private String showDiscountOnReceipt;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;
     private Integer createdBy;
     private Integer updatedBy;
     private Set<DailyRegister> dailyRegisters = new HashSet<DailyRegister>(0);

    public Register() {
    }

	
    public Register(Company company, String registerName, String cacheManagementEnable, String receiptNumber, String receiptPrefix, String receiptSufix, String selectNextUserForSale, String emailReceipt, String printReceipt, String notes, String printNotesOnReceipt, String showDiscountOnReceipt, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.company = company;
        this.registerName = registerName;
        this.cacheManagementEnable = cacheManagementEnable;
        this.receiptNumber = receiptNumber;
        this.receiptPrefix = receiptPrefix;
        this.receiptSufix = receiptSufix;
        this.selectNextUserForSale = selectNextUserForSale;
        this.emailReceipt = emailReceipt;
        this.printReceipt = printReceipt;
        this.notes = notes;
        this.printNotesOnReceipt = printNotesOnReceipt;
        this.showDiscountOnReceipt = showDiscountOnReceipt;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public Register(Outlet outlet, Company company, String registerName, String cacheManagementEnable, String receiptNumber, String receiptPrefix, String receiptSufix, String selectNextUserForSale, String emailReceipt, String printReceipt, String notes, String printNotesOnReceipt, String showDiscountOnReceipt, boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy, Set<DailyRegister> dailyRegisters) {
       this.outlet = outlet;
       this.company = company;
       this.registerName = registerName;
       this.cacheManagementEnable = cacheManagementEnable;
       this.receiptNumber = receiptNumber;
       this.receiptPrefix = receiptPrefix;
       this.receiptSufix = receiptSufix;
       this.selectNextUserForSale = selectNextUserForSale;
       this.emailReceipt = emailReceipt;
       this.printReceipt = printReceipt;
       this.notes = notes;
       this.printNotesOnReceipt = printNotesOnReceipt;
       this.showDiscountOnReceipt = showDiscountOnReceipt;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
       this.dailyRegisters = dailyRegisters;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="REGISTER_ID", unique=true, nullable=false)
    public Integer getRegisterId() {
        return this.registerId;
    }
    
    public void setRegisterId(Integer registerId) {
        this.registerId = registerId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OUTLET_ASSOCICATION_ID")
    public Outlet getOutlet() {
        return this.outlet;
    }
    
    public void setOutlet(Outlet outlet) {
        this.outlet = outlet;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

    
    @Column(name="REGISTER_NAME", nullable=false, length=256)
    public String getRegisterName() {
        return this.registerName;
    }
    
    public void setRegisterName(String registerName) {
        this.registerName = registerName;
    }

    
    @Column(name="CACHE_MANAGEMENT_ENABLE", nullable=false, length=256)
    public String getCacheManagementEnable() {
        return this.cacheManagementEnable;
    }
    
    public void setCacheManagementEnable(String cacheManagementEnable) {
        this.cacheManagementEnable = cacheManagementEnable;
    }

    
    @Column(name="RECEIPT_NUMBER", nullable=false, length=256)
    public String getReceiptNumber() {
        return this.receiptNumber;
    }
    
    public void setReceiptNumber(String receiptNumber) {
        this.receiptNumber = receiptNumber;
    }

    
    @Column(name="RECEIPT_PREFIX", nullable=false, length=256)
    public String getReceiptPrefix() {
        return this.receiptPrefix;
    }
    
    public void setReceiptPrefix(String receiptPrefix) {
        this.receiptPrefix = receiptPrefix;
    }

    
    @Column(name="RECEIPT_SUFIX", nullable=false, length=256)
    public String getReceiptSufix() {
        return this.receiptSufix;
    }
    
    public void setReceiptSufix(String receiptSufix) {
        this.receiptSufix = receiptSufix;
    }

    
    @Column(name="SELECT_NEXT_USER_FOR_SALE", nullable=false, length=256)
    public String getSelectNextUserForSale() {
        return this.selectNextUserForSale;
    }
    
    public void setSelectNextUserForSale(String selectNextUserForSale) {
        this.selectNextUserForSale = selectNextUserForSale;
    }

    
    @Column(name="EMAIL_RECEIPT", nullable=false, length=256)
    public String getEmailReceipt() {
        return this.emailReceipt;
    }
    
    public void setEmailReceipt(String emailReceipt) {
        this.emailReceipt = emailReceipt;
    }

    
    @Column(name="PRINT_RECEIPT", nullable=false, length=256)
    public String getPrintReceipt() {
        return this.printReceipt;
    }
    
    public void setPrintReceipt(String printReceipt) {
        this.printReceipt = printReceipt;
    }

    
    @Column(name="NOTES", nullable=false, length=256)
    public String getNotes() {
        return this.notes;
    }
    
    public void setNotes(String notes) {
        this.notes = notes;
    }

    
    @Column(name="PRINT_NOTES_ON_RECEIPT", nullable=false, length=256)
    public String getPrintNotesOnReceipt() {
        return this.printNotesOnReceipt;
    }
    
    public void setPrintNotesOnReceipt(String printNotesOnReceipt) {
        this.printNotesOnReceipt = printNotesOnReceipt;
    }

    
    @Column(name="SHOW_DISCOUNT_ON_RECEIPT", nullable=false, length=256)
    public String getShowDiscountOnReceipt() {
        return this.showDiscountOnReceipt;
    }
    
    public void setShowDiscountOnReceipt(String showDiscountOnReceipt) {
        this.showDiscountOnReceipt = showDiscountOnReceipt;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="register")
    public Set<DailyRegister> getDailyRegisters() {
        return this.dailyRegisters;
    }
    
    public void setDailyRegisters(Set<DailyRegister> dailyRegisters) {
        this.dailyRegisters = dailyRegisters;
    }




}


