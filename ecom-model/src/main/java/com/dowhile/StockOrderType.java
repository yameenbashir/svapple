package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * StockOrderType generated by hbm2java
 */
@Entity
@Table(name="stock_order_type"
    ,catalog="ecom"
    , uniqueConstraints = @UniqueConstraint(columnNames="STOCK_ORDER_TYPE_CODE") 
)
public class StockOrderType  implements java.io.Serializable {


     private Integer stockOrderTypeId;
     private String stockOrderTypeCode;
     private String stockOrderTypeDesc;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;
     private Integer createdBy;
     private Integer updatedBy;
     private Set<StockOrder> stockOrders = new HashSet<StockOrder>(0);

    public StockOrderType() {
    }

	
    public StockOrderType(String stockOrderTypeCode, String stockOrderTypeDesc, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.stockOrderTypeCode = stockOrderTypeCode;
        this.stockOrderTypeDesc = stockOrderTypeDesc;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public StockOrderType(String stockOrderTypeCode, String stockOrderTypeDesc, boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy, Set<StockOrder> stockOrders) {
       this.stockOrderTypeCode = stockOrderTypeCode;
       this.stockOrderTypeDesc = stockOrderTypeDesc;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
       this.stockOrders = stockOrders;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="STOCK_ORDER_TYPE_ID", unique=true, nullable=false)
    public Integer getStockOrderTypeId() {
        return this.stockOrderTypeId;
    }
    
    public void setStockOrderTypeId(Integer stockOrderTypeId) {
        this.stockOrderTypeId = stockOrderTypeId;
    }

    
    @Column(name="STOCK_ORDER_TYPE_CODE", unique=true, nullable=false, length=5)
    public String getStockOrderTypeCode() {
        return this.stockOrderTypeCode;
    }
    
    public void setStockOrderTypeCode(String stockOrderTypeCode) {
        this.stockOrderTypeCode = stockOrderTypeCode;
    }

    
    @Column(name="STOCK_ORDER_TYPE_DESC", nullable=false, length=45)
    public String getStockOrderTypeDesc() {
        return this.stockOrderTypeDesc;
    }
    
    public void setStockOrderTypeDesc(String stockOrderTypeDesc) {
        this.stockOrderTypeDesc = stockOrderTypeDesc;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="stockOrderType")
    public Set<StockOrder> getStockOrders() {
        return this.stockOrders;
    }
    
    public void setStockOrders(Set<StockOrder> stockOrders) {
        this.stockOrders = stockOrders;
    }




}


