package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * GeneralLedgerEvent generated by hbm2java
 */
@Entity
@Table(name="general_ledger_event"
    ,catalog="ecom"
)
public class GeneralLedgerEvent  implements java.io.Serializable {


     private Integer generalLedgerEventId;
     private User userByCreatedBy;
     private User userByUpdatedBy;
     private Company company;
     private String generalLedgerEventCode;
     private String generalLedgerEventName;
     private boolean generalLedgerMainEventIndicator;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;
     private Set<GlTransConfig> glTransConfigsForGlEventAssociationId = new HashSet<GlTransConfig>(0);
     private Set<GeneralLedger> generalLedgersForGlEventAssociationId = new HashSet<GeneralLedger>(0);
     private Set<GlTransConfig> glTransConfigsForGlSubEventAssociationId = new HashSet<GlTransConfig>(0);
     private Set<GeneralLedger> generalLedgersForGlSubEventAssociationId = new HashSet<GeneralLedger>(0);

    public GeneralLedgerEvent() {
    }

	
    public GeneralLedgerEvent(User userByCreatedBy, User userByUpdatedBy, Company company, String generalLedgerEventCode, String generalLedgerEventName, boolean generalLedgerMainEventIndicator, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.userByCreatedBy = userByCreatedBy;
        this.userByUpdatedBy = userByUpdatedBy;
        this.company = company;
        this.generalLedgerEventCode = generalLedgerEventCode;
        this.generalLedgerEventName = generalLedgerEventName;
        this.generalLedgerMainEventIndicator = generalLedgerMainEventIndicator;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public GeneralLedgerEvent(User userByCreatedBy, User userByUpdatedBy, Company company, String generalLedgerEventCode, String generalLedgerEventName, boolean generalLedgerMainEventIndicator, boolean activeIndicator, Date createdDate, Date lastUpdated, Set<GlTransConfig> glTransConfigsForGlEventAssociationId, Set<GeneralLedger> generalLedgersForGlEventAssociationId, Set<GlTransConfig> glTransConfigsForGlSubEventAssociationId, Set<GeneralLedger> generalLedgersForGlSubEventAssociationId) {
       this.userByCreatedBy = userByCreatedBy;
       this.userByUpdatedBy = userByUpdatedBy;
       this.company = company;
       this.generalLedgerEventCode = generalLedgerEventCode;
       this.generalLedgerEventName = generalLedgerEventName;
       this.generalLedgerMainEventIndicator = generalLedgerMainEventIndicator;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.glTransConfigsForGlEventAssociationId = glTransConfigsForGlEventAssociationId;
       this.generalLedgersForGlEventAssociationId = generalLedgersForGlEventAssociationId;
       this.glTransConfigsForGlSubEventAssociationId = glTransConfigsForGlSubEventAssociationId;
       this.generalLedgersForGlSubEventAssociationId = generalLedgersForGlSubEventAssociationId;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="GENERAL_LEDGER_EVENT_ID", unique=true, nullable=false)
    public Integer getGeneralLedgerEventId() {
        return this.generalLedgerEventId;
    }
    
    public void setGeneralLedgerEventId(Integer generalLedgerEventId) {
        this.generalLedgerEventId = generalLedgerEventId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY", nullable=false)
    public User getUserByCreatedBy() {
        return this.userByCreatedBy;
    }
    
    public void setUserByCreatedBy(User userByCreatedBy) {
        this.userByCreatedBy = userByCreatedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="UPDATED_BY", nullable=false)
    public User getUserByUpdatedBy() {
        return this.userByUpdatedBy;
    }
    
    public void setUserByUpdatedBy(User userByUpdatedBy) {
        this.userByUpdatedBy = userByUpdatedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

    
    @Column(name="GENERAL_LEDGER_EVENT_CODE", nullable=false, length=256)
    public String getGeneralLedgerEventCode() {
        return this.generalLedgerEventCode;
    }
    
    public void setGeneralLedgerEventCode(String generalLedgerEventCode) {
        this.generalLedgerEventCode = generalLedgerEventCode;
    }

    
    @Column(name="GENERAL_LEDGER_EVENT_NAME", nullable=false, length=256)
    public String getGeneralLedgerEventName() {
        return this.generalLedgerEventName;
    }
    
    public void setGeneralLedgerEventName(String generalLedgerEventName) {
        this.generalLedgerEventName = generalLedgerEventName;
    }

    
    @Column(name="GENERAL_LEDGER_MAIN_EVENT_INDICATOR", nullable=false)
    public boolean isGeneralLedgerMainEventIndicator() {
        return this.generalLedgerMainEventIndicator;
    }
    
    public void setGeneralLedgerMainEventIndicator(boolean generalLedgerMainEventIndicator) {
        this.generalLedgerMainEventIndicator = generalLedgerMainEventIndicator;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="generalLedgerEventByGlEventAssociationId")
    public Set<GlTransConfig> getGlTransConfigsForGlEventAssociationId() {
        return this.glTransConfigsForGlEventAssociationId;
    }
    
    public void setGlTransConfigsForGlEventAssociationId(Set<GlTransConfig> glTransConfigsForGlEventAssociationId) {
        this.glTransConfigsForGlEventAssociationId = glTransConfigsForGlEventAssociationId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="generalLedgerEventByGlEventAssociationId")
    public Set<GeneralLedger> getGeneralLedgersForGlEventAssociationId() {
        return this.generalLedgersForGlEventAssociationId;
    }
    
    public void setGeneralLedgersForGlEventAssociationId(Set<GeneralLedger> generalLedgersForGlEventAssociationId) {
        this.generalLedgersForGlEventAssociationId = generalLedgersForGlEventAssociationId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="generalLedgerEventByGlSubEventAssociationId")
    public Set<GlTransConfig> getGlTransConfigsForGlSubEventAssociationId() {
        return this.glTransConfigsForGlSubEventAssociationId;
    }
    
    public void setGlTransConfigsForGlSubEventAssociationId(Set<GlTransConfig> glTransConfigsForGlSubEventAssociationId) {
        this.glTransConfigsForGlSubEventAssociationId = glTransConfigsForGlSubEventAssociationId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="generalLedgerEventByGlSubEventAssociationId")
    public Set<GeneralLedger> getGeneralLedgersForGlSubEventAssociationId() {
        return this.generalLedgersForGlSubEventAssociationId;
    }
    
    public void setGeneralLedgersForGlSubEventAssociationId(Set<GeneralLedger> generalLedgersForGlSubEventAssociationId) {
        this.generalLedgersForGlSubEventAssociationId = generalLedgersForGlSubEventAssociationId;
    }




}


