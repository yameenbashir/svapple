package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InventoryCountDetail generated by hbm2java
 */
@Entity
@Table(name="inventory_count_detail"
    ,catalog="ecom"
)
public class InventoryCountDetail  implements java.io.Serializable {


    private Integer inventoryCountDetailId;
    private ProductVariant productVariant;
    private InventoryCount inventoryCount;
    private Company company;
    private Product product;
    private boolean isProduct;
    private Integer expectedProdQty;
    private BigDecimal supplyPriceExp;
    private BigDecimal retailPriceExp;
    private Integer countedProdQty;
    private BigDecimal supplyPriceCounted;
    private BigDecimal retailPriceCounted;
    private Integer countDiff;
    private BigDecimal priceDiff;
    private boolean activeIndicator;
    private Date createdDate;
    private Date lastUpdated;
    private Integer createdBy;
    private Integer updatedBy;
    private Byte auditTransfer;

   public InventoryCountDetail() {
   }

	
   public InventoryCountDetail(InventoryCount inventoryCount, Company company, boolean isProduct, boolean activeIndicator, Date createdDate, Date lastUpdated) {
       this.inventoryCount = inventoryCount;
       this.company = company;
       this.isProduct = isProduct;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
   }
   public InventoryCountDetail(ProductVariant productVariant, InventoryCount inventoryCount, Company company, Product product, boolean isProduct, Integer expectedProdQty, BigDecimal supplyPriceExp, BigDecimal retailPriceExp, Integer countedProdQty, BigDecimal supplyPriceCounted, BigDecimal retailPriceCounted, Integer countDiff, BigDecimal priceDiff, boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy, Byte auditTransfer) {
      this.productVariant = productVariant;
      this.inventoryCount = inventoryCount;
      this.company = company;
      this.product = product;
      this.isProduct = isProduct;
      this.expectedProdQty = expectedProdQty;
      this.supplyPriceExp = supplyPriceExp;
      this.retailPriceExp = retailPriceExp;
      this.countedProdQty = countedProdQty;
      this.supplyPriceCounted = supplyPriceCounted;
      this.retailPriceCounted = retailPriceCounted;
      this.countDiff = countDiff;
      this.priceDiff = priceDiff;
      this.activeIndicator = activeIndicator;
      this.createdDate = createdDate;
      this.lastUpdated = lastUpdated;
      this.createdBy = createdBy;
      this.updatedBy = updatedBy;
      this.auditTransfer = auditTransfer;
   }
  
    @Id @GeneratedValue(strategy=IDENTITY)

   
   @Column(name="INVENTORY_COUNT_DETAIL_ID", unique=true, nullable=false)
   public Integer getInventoryCountDetailId() {
       return this.inventoryCountDetailId;
   }
   
   public void setInventoryCountDetailId(Integer inventoryCountDetailId) {
       this.inventoryCountDetailId = inventoryCountDetailId;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_VARIANT_ASSOCICATION_ID")
   public ProductVariant getProductVariant() {
       return this.productVariant;
   }
   
   public void setProductVariant(ProductVariant productVariant) {
       this.productVariant = productVariant;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="INVENTORY_COUNT_ASSOCICATION_ID", nullable=false)
   public InventoryCount getInventoryCount() {
       return this.inventoryCount;
   }
   
   public void setInventoryCount(InventoryCount inventoryCount) {
       this.inventoryCount = inventoryCount;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
   public Company getCompany() {
       return this.company;
   }
   
   public void setCompany(Company company) {
       this.company = company;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="PRODUCT_ASSOCIATION_ID")
   public Product getProduct() {
       return this.product;
   }
   
   public void setProduct(Product product) {
       this.product = product;
   }

   
   @Column(name="IS_PRODUCT", nullable=false)
   public boolean isIsProduct() {
       return this.isProduct;
   }
   
   public void setIsProduct(boolean isProduct) {
       this.isProduct = isProduct;
   }

   
   @Column(name="EXPECTED_PROD_QTY")
   public Integer getExpectedProdQty() {
       return this.expectedProdQty;
   }
   
   public void setExpectedProdQty(Integer expectedProdQty) {
       this.expectedProdQty = expectedProdQty;
   }

   
   @Column(name="SUPPLY_PRICE_EXP", precision=20)
   public BigDecimal getSupplyPriceExp() {
       return this.supplyPriceExp;
   }
   
   public void setSupplyPriceExp(BigDecimal supplyPriceExp) {
       this.supplyPriceExp = supplyPriceExp;
   }

   
   @Column(name="RETAIL_PRICE_EXP", precision=20)
   public BigDecimal getRetailPriceExp() {
       return this.retailPriceExp;
   }
   
   public void setRetailPriceExp(BigDecimal retailPriceExp) {
       this.retailPriceExp = retailPriceExp;
   }

   
   @Column(name="COUNTED_PROD_QTY")
   public Integer getCountedProdQty() {
       return this.countedProdQty;
   }
   
   public void setCountedProdQty(Integer countedProdQty) {
       this.countedProdQty = countedProdQty;
   }

   
   @Column(name="SUPPLY_PRICE_COUNTED", precision=20)
   public BigDecimal getSupplyPriceCounted() {
       return this.supplyPriceCounted;
   }
   
   public void setSupplyPriceCounted(BigDecimal supplyPriceCounted) {
       this.supplyPriceCounted = supplyPriceCounted;
   }

   
   @Column(name="RETAIL_PRICE_COUNTED", precision=20)
   public BigDecimal getRetailPriceCounted() {
       return this.retailPriceCounted;
   }
   
   public void setRetailPriceCounted(BigDecimal retailPriceCounted) {
       this.retailPriceCounted = retailPriceCounted;
   }

   
   @Column(name="COUNT_DIFF")
   public Integer getCountDiff() {
       return this.countDiff;
   }
   
   public void setCountDiff(Integer countDiff) {
       this.countDiff = countDiff;
   }

   
   @Column(name="PRICE_DIFF", precision=20)
   public BigDecimal getPriceDiff() {
       return this.priceDiff;
   }
   
   public void setPriceDiff(BigDecimal priceDiff) {
       this.priceDiff = priceDiff;
   }

   
   @Column(name="ACTIVE_INDICATOR", nullable=false)
   public boolean isActiveIndicator() {
       return this.activeIndicator;
   }
   
   public void setActiveIndicator(boolean activeIndicator) {
       this.activeIndicator = activeIndicator;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name="CREATED_DATE", nullable=false, length=19)
   public Date getCreatedDate() {
       return this.createdDate;
   }
   
   public void setCreatedDate(Date createdDate) {
       this.createdDate = createdDate;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name="LAST_UPDATED", nullable=false, length=19)
   public Date getLastUpdated() {
       return this.lastUpdated;
   }
   
   public void setLastUpdated(Date lastUpdated) {
       this.lastUpdated = lastUpdated;
   }

   
   @Column(name="CREATED_BY")
   public Integer getCreatedBy() {
       return this.createdBy;
   }
   
   public void setCreatedBy(Integer createdBy) {
       this.createdBy = createdBy;
   }

   
   @Column(name="UPDATED_BY")
   public Integer getUpdatedBy() {
       return this.updatedBy;
   }
   
   public void setUpdatedBy(Integer updatedBy) {
       this.updatedBy = updatedBy;
   }

   
   @Column(name="audit_transfer")
   public Byte getAuditTransfer() {
       return this.auditTransfer;
   }
   
   public void setAuditTransfer(Byte auditTransfer) {
       this.auditTransfer = auditTransfer;
   }




}


