package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserOutlets generated by hbm2java
 */
@Entity
@Table(name="user_outlets"
    ,catalog="ecom"
)
public class UserOutlets  implements java.io.Serializable {


     private Integer userOutletsId;
     private Outlet outlet;
     private User userByCreatedBy;
     private User userByUpdatedBy;
     private User userByUserAssociationId;
     private Company company;
     private Integer addressAssocicationId;
     private Integer timeZoneAssocicationId;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;

    public UserOutlets() {
    }

	
    public UserOutlets(User userByCreatedBy, User userByUpdatedBy, User userByUserAssociationId, Company company, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.userByCreatedBy = userByCreatedBy;
        this.userByUpdatedBy = userByUpdatedBy;
        this.userByUserAssociationId = userByUserAssociationId;
        this.company = company;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public UserOutlets(Outlet outlet, User userByCreatedBy, User userByUpdatedBy, User userByUserAssociationId, Company company, Integer addressAssocicationId, Integer timeZoneAssocicationId, boolean activeIndicator, Date createdDate, Date lastUpdated) {
       this.outlet = outlet;
       this.userByCreatedBy = userByCreatedBy;
       this.userByUpdatedBy = userByUpdatedBy;
       this.userByUserAssociationId = userByUserAssociationId;
       this.company = company;
       this.addressAssocicationId = addressAssocicationId;
       this.timeZoneAssocicationId = timeZoneAssocicationId;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="USER_OUTLETS_ID", unique=true, nullable=false)
    public Integer getUserOutletsId() {
        return this.userOutletsId;
    }
    
    public void setUserOutletsId(Integer userOutletsId) {
        this.userOutletsId = userOutletsId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OUTLET_ASSOCICATION_ID")
    public Outlet getOutlet() {
        return this.outlet;
    }
    
    public void setOutlet(Outlet outlet) {
        this.outlet = outlet;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY", nullable=false)
    public User getUserByCreatedBy() {
        return this.userByCreatedBy;
    }
    
    public void setUserByCreatedBy(User userByCreatedBy) {
        this.userByCreatedBy = userByCreatedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="UPDATED_BY", nullable=false)
    public User getUserByUpdatedBy() {
        return this.userByUpdatedBy;
    }
    
    public void setUserByUpdatedBy(User userByUpdatedBy) {
        this.userByUpdatedBy = userByUpdatedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="USER_ASSOCIATION_ID", nullable=false)
    public User getUserByUserAssociationId() {
        return this.userByUserAssociationId;
    }
    
    public void setUserByUserAssociationId(User userByUserAssociationId) {
        this.userByUserAssociationId = userByUserAssociationId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

    
    @Column(name="ADDRESS_ASSOCICATION_ID")
    public Integer getAddressAssocicationId() {
        return this.addressAssocicationId;
    }
    
    public void setAddressAssocicationId(Integer addressAssocicationId) {
        this.addressAssocicationId = addressAssocicationId;
    }

    
    @Column(name="TIME_ZONE_ASSOCICATION_ID")
    public Integer getTimeZoneAssocicationId() {
        return this.timeZoneAssocicationId;
    }
    
    public void setTimeZoneAssocicationId(Integer timeZoneAssocicationId) {
        this.timeZoneAssocicationId = timeZoneAssocicationId;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }




}


