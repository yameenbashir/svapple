package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Loyalty generated by hbm2java
 */
@Entity
@Table(name="loyalty"
    ,catalog="ecom"
)
public class Loyalty  implements java.io.Serializable {


     private Integer loyaltyId;
     private Contact contact;
     private Outlet outlet;
     private Company company;
     private BigDecimal loyaltyAmount;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;
     private Integer createdBy;
     private Integer updatedBy;

    public Loyalty() {
    }

	
    public Loyalty(Contact contact, Company company, BigDecimal loyaltyAmount, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.contact = contact;
        this.company = company;
        this.loyaltyAmount = loyaltyAmount;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public Loyalty(Contact contact, Outlet outlet, Company company, BigDecimal loyaltyAmount, boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy) {
       this.contact = contact;
       this.outlet = outlet;
       this.company = company;
       this.loyaltyAmount = loyaltyAmount;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="LOYALTY_ID", unique=true, nullable=false)
    public Integer getLoyaltyId() {
        return this.loyaltyId;
    }
    
    public void setLoyaltyId(Integer loyaltyId) {
        this.loyaltyId = loyaltyId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_ASSOCIATION_ID", nullable=false)
    public Contact getContact() {
        return this.contact;
    }
    
    public void setContact(Contact contact) {
        this.contact = contact;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OUTLET_ASSOCICATION_ID")
    public Outlet getOutlet() {
        return this.outlet;
    }
    
    public void setOutlet(Outlet outlet) {
        this.outlet = outlet;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

    
    @Column(name="LOYALTY_AMOUNT", nullable=false, precision=10)
    public BigDecimal getLoyaltyAmount() {
        return this.loyaltyAmount;
    }
    
    public void setLoyaltyAmount(BigDecimal loyaltyAmount) {
        this.loyaltyAmount = loyaltyAmount;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }




}


