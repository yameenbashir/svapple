package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TicketActivity generated by hbm2java
 */
@Entity
@Table(name="ticket_activity"
    ,catalog="ecom"
)
public class TicketActivity  implements java.io.Serializable {


     private Integer ticketActivityId;
     private Ticket ticket;
     private Company company;
     private String description;
     private String userReply;
     private String oldStatus;
     private String newStatus;
     private String resolverFeedback;
     private Date createdDate;
     private Date lastUpdated;

    public TicketActivity() {
    }

    public TicketActivity(Ticket ticket, Company company, String description, String userReply, String oldStatus, String newStatus, String resolverFeedback, Date createdDate, Date lastUpdated) {
       this.ticket = ticket;
       this.company = company;
       this.description = description;
       this.userReply = userReply;
       this.oldStatus = oldStatus;
       this.newStatus = newStatus;
       this.resolverFeedback = resolverFeedback;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="TICKET_ACTIVITY_ID", unique=true, nullable=false)
    public Integer getTicketActivityId() {
        return this.ticketActivityId;
    }
    
    public void setTicketActivityId(Integer ticketActivityId) {
        this.ticketActivityId = ticketActivityId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TICKET_ASSOCIATION_ID", nullable=false)
    public Ticket getTicket() {
        return this.ticket;
    }
    
    public void setTicket(Ticket ticket) {
        this.ticket = ticket;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

    
    @Column(name="DESCRIPTION", nullable=false, length=256)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="USER_REPLY", nullable=false, length=256)
    public String getUserReply() {
        return this.userReply;
    }
    
    public void setUserReply(String userReply) {
        this.userReply = userReply;
    }

    
    @Column(name="OLD_STATUS", nullable=false, length=256)
    public String getOldStatus() {
        return this.oldStatus;
    }
    
    public void setOldStatus(String oldStatus) {
        this.oldStatus = oldStatus;
    }

    
    @Column(name="NEW_STATUS", nullable=false, length=256)
    public String getNewStatus() {
        return this.newStatus;
    }
    
    public void setNewStatus(String newStatus) {
        this.newStatus = newStatus;
    }

    
    @Column(name="RESOLVER_FEEDBACK", nullable=false, length=256)
    public String getResolverFeedback() {
        return this.resolverFeedback;
    }
    
    public void setResolverFeedback(String resolverFeedback) {
        this.resolverFeedback = resolverFeedback;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }




}


