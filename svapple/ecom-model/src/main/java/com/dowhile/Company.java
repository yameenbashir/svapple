package com.dowhile;

// Generated Dec 5, 2017 5:08:49 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Company generated by hbm2java
 */
@Entity
@Table(name = "company",catalog="ecom")
public class Company implements java.io.Serializable {


    private Integer companyId;
    private Currency currency;
    private PrinterFormat printerFormat;
    private TimeZone timeZone;
    private String companyName;
    private String displayPrices;
    private String skuGeneration;
    private String currentSequenceNumber;
    private Boolean loyaltyEnabled;
    private BigDecimal loyaltyInvoiceAmount;
    private BigDecimal loyaltyAmount;
    private Date loyaltyEnabledDate;
    private BigDecimal loyaltyBonusAmount;
    private Boolean loyaltyBonusEnabled;
    private Date loyaltyBonusEnabledDate;
    private String userSwitchSecurity;
    private String enableStoresCredit;
    private String url;
    private Boolean activeIndicator;
    private Date createdDate;
    private Date lastUpdated;
    private Integer createdBy;
    private Integer updatedBy;
    private Set<InventoryCountDetail> inventoryCountDetails = new HashSet<InventoryCountDetail>(0);
    private Set<Brand> brands = new HashSet<Brand>(0);
    private Set<Receipt> receipts = new HashSet<Receipt>(0);
    private Set<DailyRegister> dailyRegisters = new HashSet<DailyRegister>(0);
    private Set<ExpenseType> expenseTypes = new HashSet<ExpenseType>(0);
    private Set<ContactPayments> contactPaymentses = new HashSet<ContactPayments>(0);
    private Set<InventoryCount> inventoryCounts = new HashSet<InventoryCount>(0);
    private Set<Register> registers = new HashSet<Register>(0);
    private Set<ProductPriceHistory> productPriceHistories = new HashSet<ProductPriceHistory>(0);
    private Set<Announcement> announcements = new HashSet<Announcement>(0);
    private Set<Configuration> configurations = new HashSet<Configuration>(0);
    private Set<PriceBook> priceBooks = new HashSet<PriceBook>(0);
    private Set<AccountType> accountTypes = new HashSet<AccountType>(0);
    private Set<Contact> contacts = new HashSet<Contact>(0);
    private Set<StockOrder> stockOrders = new HashSet<StockOrder>(0);
    private Set<ChartOfAccount> chartOfAccounts = new HashSet<ChartOfAccount>(0);
    private Set<Address> addresses = new HashSet<Address>(0);
    private Set<Message> messages = new HashSet<Message>(0);
    private Set<ProductTag> productTags = new HashSet<ProductTag>(0);
    private Set<PriceBookDetail> priceBookDetails = new HashSet<PriceBookDetail>(0);
    private Set<User> users = new HashSet<User>(0);
    private Set<Module> modules = new HashSet<Module>(0);
    private Set<OrderMain> orderMains = new HashSet<OrderMain>(0);
    private Set<GeneralLedger> generalLedgers = new HashSet<GeneralLedger>(0);
    private Set<VariantAttributeValues> variantAttributeValueses = new HashSet<VariantAttributeValues>(0);
    private Set<CashManagment> cashManagments = new HashSet<CashManagment>(0);
    private Set<VariantAttribute> variantAttributes = new HashSet<VariantAttribute>(0);
    private Set<Notification> notifications = new HashSet<Notification>(0);
    private Set<TicketActivity> ticketActivities = new HashSet<TicketActivity>(0);
    private Set<Menu> menus = new HashSet<Menu>(0);
    private Set<InvoiceMain> invoiceMains = new HashSet<InvoiceMain>(0);
    private Set<CompositeProduct> compositeProducts = new HashSet<CompositeProduct>(0);
    private Set<Product> products = new HashSet<Product>(0);
    private Set<ProductType> productTypes = new HashSet<ProductType>(0);
    private Set<ActivityDetail> activityDetails = new HashSet<ActivityDetail>(0);
    private Set<InvoiceDetail> invoiceDetails = new HashSet<InvoiceDetail>(0);
    private Set<BankAccount> bankAccounts = new HashSet<BankAccount>(0);
    private Set<ProductHistory> productHistories = new HashSet<ProductHistory>(0);
    private Set<UserOutlets> userOutletses = new HashSet<UserOutlets>(0);
    private Set<GlTransConfig> glTransConfigs = new HashSet<GlTransConfig>(0);
    private Set<StockOrderDetail> stockOrderDetails = new HashSet<StockOrderDetail>(0);
    private Set<MessageDetail> messageDetails = new HashSet<MessageDetail>(0);
    private Set<Loyalty> loyalties = new HashSet<Loyalty>(0);
    private Set<Tag> tags = new HashSet<Tag>(0);
    private Set<ProductVariant> productVariants = new HashSet<ProductVariant>(0);
    private Set<Ticket> tickets = new HashSet<Ticket>(0);
    private Set<Outlet> outlets = new HashSet<Outlet>(0);
    private Set<GeneralLedgerEvent> generalLedgerEvents = new HashSet<GeneralLedgerEvent>(0);
    private Set<ContactGroup> contactGroups = new HashSet<ContactGroup>(0);
    private Set<SalesTax> salesTaxes = new HashSet<SalesTax>(0);

   public Company() {
   }

	
   public Company(String companyName, Date loyaltyEnabledDate, Date loyaltyBonusEnabledDate, String enableStoresCredit, Date createdDate, Date lastUpdated) {
       this.companyName = companyName;
       this.loyaltyEnabledDate = loyaltyEnabledDate;
       this.loyaltyBonusEnabledDate = loyaltyBonusEnabledDate;
       this.enableStoresCredit = enableStoresCredit;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
   }
   public Company(Currency currency, PrinterFormat printerFormat, TimeZone timeZone, String companyName, String displayPrices, String skuGeneration, String currentSequenceNumber, Boolean loyaltyEnabled, BigDecimal loyaltyInvoiceAmount, BigDecimal loyaltyAmount, Date loyaltyEnabledDate, BigDecimal loyaltyBonusAmount, Boolean loyaltyBonusEnabled, Date loyaltyBonusEnabledDate, String userSwitchSecurity, String enableStoresCredit, String url, Boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy, Set<InventoryCountDetail> inventoryCountDetails, Set<Brand> brands, Set<Receipt> receipts, Set<DailyRegister> dailyRegisters, Set<ExpenseType> expenseTypes, Set<ContactPayments> contactPaymentses, Set<InventoryCount> inventoryCounts, Set<Register> registers, Set<ProductPriceHistory> productPriceHistories, Set<Announcement> announcements, Set<Configuration> configurations, Set<PriceBook> priceBooks, Set<AccountType> accountTypes, Set<Contact> contacts, Set<StockOrder> stockOrders, Set<ChartOfAccount> chartOfAccounts, Set<Address> addresses, Set<Message> messages, Set<ProductTag> productTags, Set<PriceBookDetail> priceBookDetails, Set<User> users, Set<Module> modules, Set<OrderMain> orderMains, Set<GeneralLedger> generalLedgers, Set<VariantAttributeValues> variantAttributeValueses, Set<CashManagment> cashManagments, Set<VariantAttribute> variantAttributes, Set<Notification> notifications, Set<TicketActivity> ticketActivities, Set<Menu> menus, Set<InvoiceMain> invoiceMains, Set<CompositeProduct> compositeProducts, Set<Product> products, Set<ProductType> productTypes, Set<ActivityDetail> activityDetails, Set<InvoiceDetail> invoiceDetails, Set<BankAccount> bankAccounts, Set<ProductHistory> productHistories, Set<UserOutlets> userOutletses, Set<GlTransConfig> glTransConfigs, Set<StockOrderDetail> stockOrderDetails, Set<MessageDetail> messageDetails, Set<Loyalty> loyalties, Set<Tag> tags, Set<ProductVariant> productVariants, Set<Ticket> tickets, Set<Outlet> outlets, Set<GeneralLedgerEvent> generalLedgerEvents, Set<ContactGroup> contactGroups, Set<SalesTax> salesTaxes) {
      this.currency = currency;
      this.printerFormat = printerFormat;
      this.timeZone = timeZone;
      this.companyName = companyName;
      this.displayPrices = displayPrices;
      this.skuGeneration = skuGeneration;
      this.currentSequenceNumber = currentSequenceNumber;
      this.loyaltyEnabled = loyaltyEnabled;
      this.loyaltyInvoiceAmount = loyaltyInvoiceAmount;
      this.loyaltyAmount = loyaltyAmount;
      this.loyaltyEnabledDate = loyaltyEnabledDate;
      this.loyaltyBonusAmount = loyaltyBonusAmount;
      this.loyaltyBonusEnabled = loyaltyBonusEnabled;
      this.loyaltyBonusEnabledDate = loyaltyBonusEnabledDate;
      this.userSwitchSecurity = userSwitchSecurity;
      this.enableStoresCredit = enableStoresCredit;
      this.url = url;
      this.activeIndicator = activeIndicator;
      this.createdDate = createdDate;
      this.lastUpdated = lastUpdated;
      this.createdBy = createdBy;
      this.updatedBy = updatedBy;
      this.inventoryCountDetails = inventoryCountDetails;
      this.brands = brands;
      this.receipts = receipts;
      this.dailyRegisters = dailyRegisters;
      this.expenseTypes = expenseTypes;
      this.contactPaymentses = contactPaymentses;
      this.inventoryCounts = inventoryCounts;
      this.registers = registers;
      this.productPriceHistories = productPriceHistories;
      this.announcements = announcements;
      this.configurations = configurations;
      this.priceBooks = priceBooks;
      this.accountTypes = accountTypes;
      this.contacts = contacts;
      this.stockOrders = stockOrders;
      this.chartOfAccounts = chartOfAccounts;
      this.addresses = addresses;
      this.messages = messages;
      this.productTags = productTags;
      this.priceBookDetails = priceBookDetails;
      this.users = users;
      this.modules = modules;
      this.orderMains = orderMains;
      this.generalLedgers = generalLedgers;
      this.variantAttributeValueses = variantAttributeValueses;
      this.cashManagments = cashManagments;
      this.variantAttributes = variantAttributes;
      this.notifications = notifications;
      this.ticketActivities = ticketActivities;
      this.menus = menus;
      this.invoiceMains = invoiceMains;
      this.compositeProducts = compositeProducts;
      this.products = products;
      this.productTypes = productTypes;
      this.activityDetails = activityDetails;
      this.invoiceDetails = invoiceDetails;
      this.bankAccounts = bankAccounts;
      this.productHistories = productHistories;
      this.userOutletses = userOutletses;
      this.glTransConfigs = glTransConfigs;
      this.stockOrderDetails = stockOrderDetails;
      this.messageDetails = messageDetails;
      this.loyalties = loyalties;
      this.tags = tags;
      this.productVariants = productVariants;
      this.tickets = tickets;
      this.outlets = outlets;
      this.generalLedgerEvents = generalLedgerEvents;
      this.contactGroups = contactGroups;
      this.salesTaxes = salesTaxes;
   }
  
    @Id @GeneratedValue(strategy=IDENTITY)

   
   @Column(name="COMPANY_ID", unique=true, nullable=false)
   public Integer getCompanyId() {
       return this.companyId;
   }
   
   public void setCompanyId(Integer companyId) {
       this.companyId = companyId;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="CURRENCY_ASSOCICATION_ID")
   public Currency getCurrency() {
       return this.currency;
   }
   
   public void setCurrency(Currency currency) {
       this.currency = currency;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="PRINTER_ASSOCICATION_ID")
   public PrinterFormat getPrinterFormat() {
       return this.printerFormat;
   }
   
   public void setPrinterFormat(PrinterFormat printerFormat) {
       this.printerFormat = printerFormat;
   }

@ManyToOne(fetch=FetchType.LAZY)
   @JoinColumn(name="TIME_ZONE_ASSOCICATION_ID")
   public TimeZone getTimeZone() {
       return this.timeZone;
   }
   
   public void setTimeZone(TimeZone timeZone) {
       this.timeZone = timeZone;
   }

   
   @Column(name="COMPANY_NAME", nullable=false, length=256)
   public String getCompanyName() {
       return this.companyName;
   }
   
   public void setCompanyName(String companyName) {
       this.companyName = companyName;
   }

   
   @Column(name="DISPLAY_PRICES", length=256)
   public String getDisplayPrices() {
       return this.displayPrices;
   }
   
   public void setDisplayPrices(String displayPrices) {
       this.displayPrices = displayPrices;
   }

   
   @Column(name="SKU_GENERATION", length=256)
   public String getSkuGeneration() {
       return this.skuGeneration;
   }
   
   public void setSkuGeneration(String skuGeneration) {
       this.skuGeneration = skuGeneration;
   }

   
   @Column(name="CURRENT_SEQUENCE_NUMBER", length=256)
   public String getCurrentSequenceNumber() {
       return this.currentSequenceNumber;
   }
   
   public void setCurrentSequenceNumber(String currentSequenceNumber) {
       this.currentSequenceNumber = currentSequenceNumber;
   }

   
   @Column(name="LOYALTY_ENABLED")
   public Boolean getLoyaltyEnabled() {
       return this.loyaltyEnabled;
   }
   
   public void setLoyaltyEnabled(Boolean loyaltyEnabled) {
       this.loyaltyEnabled = loyaltyEnabled;
   }

   
   @Column(name="LOYALTY_INVOICE_AMOUNT", precision=20)
   public BigDecimal getLoyaltyInvoiceAmount() {
       return this.loyaltyInvoiceAmount;
   }
   
   public void setLoyaltyInvoiceAmount(BigDecimal loyaltyInvoiceAmount) {
       this.loyaltyInvoiceAmount = loyaltyInvoiceAmount;
   }

   
   @Column(name="LOYALTY_AMOUNT", precision=20)
   public BigDecimal getLoyaltyAmount() {
       return this.loyaltyAmount;
   }
   
   public void setLoyaltyAmount(BigDecimal loyaltyAmount) {
       this.loyaltyAmount = loyaltyAmount;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name="LOYALTY_ENABLED_DATE", nullable=false, length=19)
   public Date getLoyaltyEnabledDate() {
       return this.loyaltyEnabledDate;
   }
   
   public void setLoyaltyEnabledDate(Date loyaltyEnabledDate) {
       this.loyaltyEnabledDate = loyaltyEnabledDate;
   }

   
   @Column(name="LOYALTY_BONUS_AMOUNT", precision=20)
   public BigDecimal getLoyaltyBonusAmount() {
       return this.loyaltyBonusAmount;
   }
   
   public void setLoyaltyBonusAmount(BigDecimal loyaltyBonusAmount) {
       this.loyaltyBonusAmount = loyaltyBonusAmount;
   }

   
   @Column(name="LOYALTY_BONUS_ENABLED")
   public Boolean getLoyaltyBonusEnabled() {
       return this.loyaltyBonusEnabled;
   }
   
   public void setLoyaltyBonusEnabled(Boolean loyaltyBonusEnabled) {
       this.loyaltyBonusEnabled = loyaltyBonusEnabled;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name="LOYALTY_BONUS_ENABLED_DATE", nullable=false, length=19)
   public Date getLoyaltyBonusEnabledDate() {
       return this.loyaltyBonusEnabledDate;
   }
   
   public void setLoyaltyBonusEnabledDate(Date loyaltyBonusEnabledDate) {
       this.loyaltyBonusEnabledDate = loyaltyBonusEnabledDate;
   }

   
   @Column(name="USER_SWITCH_SECURITY", length=256)
   public String getUserSwitchSecurity() {
       return this.userSwitchSecurity;
   }
   
   public void setUserSwitchSecurity(String userSwitchSecurity) {
       this.userSwitchSecurity = userSwitchSecurity;
   }

   
   @Column(name="ENABLE_STORES_CREDIT", nullable=false, length=256)
   public String getEnableStoresCredit() {
       return this.enableStoresCredit;
   }
   
   public void setEnableStoresCredit(String enableStoresCredit) {
       this.enableStoresCredit = enableStoresCredit;
   }

   
   @Column(name="URL", length=100)
   public String getUrl() {
       return this.url;
   }
   
   public void setUrl(String url) {
       this.url = url;
   }

   
   @Column(name="ACTIVE_INDICATOR")
   public Boolean getActiveIndicator() {
       return this.activeIndicator;
   }
   
   public void setActiveIndicator(Boolean activeIndicator) {
       this.activeIndicator = activeIndicator;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name="CREATED_DATE", nullable=false, length=19)
   public Date getCreatedDate() {
       return this.createdDate;
   }
   
   public void setCreatedDate(Date createdDate) {
       this.createdDate = createdDate;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name="LAST_UPDATED", nullable=false, length=19)
   public Date getLastUpdated() {
       return this.lastUpdated;
   }
   
   public void setLastUpdated(Date lastUpdated) {
       this.lastUpdated = lastUpdated;
   }

   
   @Column(name="CREATED_BY")
   public Integer getCreatedBy() {
       return this.createdBy;
   }
   
   public void setCreatedBy(Integer createdBy) {
       this.createdBy = createdBy;
   }

   
   @Column(name="UPDATED_BY")
   public Integer getUpdatedBy() {
       return this.updatedBy;
   }
   
   public void setUpdatedBy(Integer updatedBy) {
       this.updatedBy = updatedBy;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<InventoryCountDetail> getInventoryCountDetails() {
       return this.inventoryCountDetails;
   }
   
   public void setInventoryCountDetails(Set<InventoryCountDetail> inventoryCountDetails) {
       this.inventoryCountDetails = inventoryCountDetails;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Brand> getBrands() {
       return this.brands;
   }
   
   public void setBrands(Set<Brand> brands) {
       this.brands = brands;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Receipt> getReceipts() {
       return this.receipts;
   }
   
   public void setReceipts(Set<Receipt> receipts) {
       this.receipts = receipts;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<DailyRegister> getDailyRegisters() {
       return this.dailyRegisters;
   }
   
   public void setDailyRegisters(Set<DailyRegister> dailyRegisters) {
       this.dailyRegisters = dailyRegisters;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<ExpenseType> getExpenseTypes() {
       return this.expenseTypes;
   }
   
   public void setExpenseTypes(Set<ExpenseType> expenseTypes) {
       this.expenseTypes = expenseTypes;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<ContactPayments> getContactPaymentses() {
       return this.contactPaymentses;
   }
   
   public void setContactPaymentses(Set<ContactPayments> contactPaymentses) {
       this.contactPaymentses = contactPaymentses;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<InventoryCount> getInventoryCounts() {
       return this.inventoryCounts;
   }
   
   public void setInventoryCounts(Set<InventoryCount> inventoryCounts) {
       this.inventoryCounts = inventoryCounts;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Register> getRegisters() {
       return this.registers;
   }
   
   public void setRegisters(Set<Register> registers) {
       this.registers = registers;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<ProductPriceHistory> getProductPriceHistories() {
       return this.productPriceHistories;
   }
   
   public void setProductPriceHistories(Set<ProductPriceHistory> productPriceHistories) {
       this.productPriceHistories = productPriceHistories;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Announcement> getAnnouncements() {
       return this.announcements;
   }
   
   public void setAnnouncements(Set<Announcement> announcements) {
       this.announcements = announcements;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Configuration> getConfigurations() {
       return this.configurations;
   }
   
   public void setConfigurations(Set<Configuration> configurations) {
       this.configurations = configurations;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<PriceBook> getPriceBooks() {
       return this.priceBooks;
   }
   
   public void setPriceBooks(Set<PriceBook> priceBooks) {
       this.priceBooks = priceBooks;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<AccountType> getAccountTypes() {
       return this.accountTypes;
   }
   
   public void setAccountTypes(Set<AccountType> accountTypes) {
       this.accountTypes = accountTypes;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Contact> getContacts() {
       return this.contacts;
   }
   
   public void setContacts(Set<Contact> contacts) {
       this.contacts = contacts;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<StockOrder> getStockOrders() {
       return this.stockOrders;
   }
   
   public void setStockOrders(Set<StockOrder> stockOrders) {
       this.stockOrders = stockOrders;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<ChartOfAccount> getChartOfAccounts() {
       return this.chartOfAccounts;
   }
   
   public void setChartOfAccounts(Set<ChartOfAccount> chartOfAccounts) {
       this.chartOfAccounts = chartOfAccounts;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Address> getAddresses() {
       return this.addresses;
   }
   
   public void setAddresses(Set<Address> addresses) {
       this.addresses = addresses;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Message> getMessages() {
       return this.messages;
   }
   
   public void setMessages(Set<Message> messages) {
       this.messages = messages;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<ProductTag> getProductTags() {
       return this.productTags;
   }
   
   public void setProductTags(Set<ProductTag> productTags) {
       this.productTags = productTags;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<PriceBookDetail> getPriceBookDetails() {
       return this.priceBookDetails;
   }
   
   public void setPriceBookDetails(Set<PriceBookDetail> priceBookDetails) {
       this.priceBookDetails = priceBookDetails;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<User> getUsers() {
       return this.users;
   }
   
   public void setUsers(Set<User> users) {
       this.users = users;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Module> getModules() {
       return this.modules;
   }
   
   public void setModules(Set<Module> modules) {
       this.modules = modules;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<OrderMain> getOrderMains() {
       return this.orderMains;
   }
   
   public void setOrderMains(Set<OrderMain> orderMains) {
       this.orderMains = orderMains;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<GeneralLedger> getGeneralLedgers() {
       return this.generalLedgers;
   }
   
   public void setGeneralLedgers(Set<GeneralLedger> generalLedgers) {
       this.generalLedgers = generalLedgers;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<VariantAttributeValues> getVariantAttributeValueses() {
       return this.variantAttributeValueses;
   }
   
   public void setVariantAttributeValueses(Set<VariantAttributeValues> variantAttributeValueses) {
       this.variantAttributeValueses = variantAttributeValueses;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<CashManagment> getCashManagments() {
       return this.cashManagments;
   }
   
   public void setCashManagments(Set<CashManagment> cashManagments) {
       this.cashManagments = cashManagments;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<VariantAttribute> getVariantAttributes() {
       return this.variantAttributes;
   }
   
   public void setVariantAttributes(Set<VariantAttribute> variantAttributes) {
       this.variantAttributes = variantAttributes;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Notification> getNotifications() {
       return this.notifications;
   }
   
   public void setNotifications(Set<Notification> notifications) {
       this.notifications = notifications;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<TicketActivity> getTicketActivities() {
       return this.ticketActivities;
   }
   
   public void setTicketActivities(Set<TicketActivity> ticketActivities) {
       this.ticketActivities = ticketActivities;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Menu> getMenus() {
       return this.menus;
   }
   
   public void setMenus(Set<Menu> menus) {
       this.menus = menus;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<InvoiceMain> getInvoiceMains() {
       return this.invoiceMains;
   }
   
   public void setInvoiceMains(Set<InvoiceMain> invoiceMains) {
       this.invoiceMains = invoiceMains;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<CompositeProduct> getCompositeProducts() {
       return this.compositeProducts;
   }
   
   public void setCompositeProducts(Set<CompositeProduct> compositeProducts) {
       this.compositeProducts = compositeProducts;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Product> getProducts() {
       return this.products;
   }
   
   public void setProducts(Set<Product> products) {
       this.products = products;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<ProductType> getProductTypes() {
       return this.productTypes;
   }
   
   public void setProductTypes(Set<ProductType> productTypes) {
       this.productTypes = productTypes;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<ActivityDetail> getActivityDetails() {
       return this.activityDetails;
   }
   
   public void setActivityDetails(Set<ActivityDetail> activityDetails) {
       this.activityDetails = activityDetails;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<InvoiceDetail> getInvoiceDetails() {
       return this.invoiceDetails;
   }
   
   public void setInvoiceDetails(Set<InvoiceDetail> invoiceDetails) {
       this.invoiceDetails = invoiceDetails;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<BankAccount> getBankAccounts() {
       return this.bankAccounts;
   }
   
   public void setBankAccounts(Set<BankAccount> bankAccounts) {
       this.bankAccounts = bankAccounts;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<ProductHistory> getProductHistories() {
       return this.productHistories;
   }
   
   public void setProductHistories(Set<ProductHistory> productHistories) {
       this.productHistories = productHistories;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<UserOutlets> getUserOutletses() {
       return this.userOutletses;
   }
   
   public void setUserOutletses(Set<UserOutlets> userOutletses) {
       this.userOutletses = userOutletses;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<GlTransConfig> getGlTransConfigs() {
       return this.glTransConfigs;
   }
   
   public void setGlTransConfigs(Set<GlTransConfig> glTransConfigs) {
       this.glTransConfigs = glTransConfigs;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<StockOrderDetail> getStockOrderDetails() {
       return this.stockOrderDetails;
   }
   
   public void setStockOrderDetails(Set<StockOrderDetail> stockOrderDetails) {
       this.stockOrderDetails = stockOrderDetails;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<MessageDetail> getMessageDetails() {
       return this.messageDetails;
   }
   
   public void setMessageDetails(Set<MessageDetail> messageDetails) {
       this.messageDetails = messageDetails;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Loyalty> getLoyalties() {
       return this.loyalties;
   }
   
   public void setLoyalties(Set<Loyalty> loyalties) {
       this.loyalties = loyalties;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Tag> getTags() {
       return this.tags;
   }
   
   public void setTags(Set<Tag> tags) {
       this.tags = tags;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<ProductVariant> getProductVariants() {
       return this.productVariants;
   }
   
   public void setProductVariants(Set<ProductVariant> productVariants) {
       this.productVariants = productVariants;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Ticket> getTickets() {
       return this.tickets;
   }
   
   public void setTickets(Set<Ticket> tickets) {
       this.tickets = tickets;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<Outlet> getOutlets() {
       return this.outlets;
   }
   
   public void setOutlets(Set<Outlet> outlets) {
       this.outlets = outlets;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<GeneralLedgerEvent> getGeneralLedgerEvents() {
       return this.generalLedgerEvents;
   }
   
   public void setGeneralLedgerEvents(Set<GeneralLedgerEvent> generalLedgerEvents) {
       this.generalLedgerEvents = generalLedgerEvents;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<ContactGroup> getContactGroups() {
       return this.contactGroups;
   }
   
   public void setContactGroups(Set<ContactGroup> contactGroups) {
       this.contactGroups = contactGroups;
   }

@OneToMany(fetch=FetchType.LAZY, mappedBy="company")
   public Set<SalesTax> getSalesTaxes() {
       return this.salesTaxes;
   }
   
   public void setSalesTaxes(Set<SalesTax> salesTaxes) {
       this.salesTaxes = salesTaxes;
   }




}
