package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InventoryCount generated by hbm2java
 */
@Entity
@Table(name="inventory_count"
    ,catalog="ecom"
)
public class InventoryCount  implements java.io.Serializable {


     private Integer inventoryCountId;
     private Outlet outlet;
     private InventoryCountType inventoryCountType;
     private Company company;
     private Status status;
     private String inventoryCountRefNo;
     private Integer expectedProdQty;
     private Integer countedProdQty;
     private Integer countDiff;
     private BigDecimal supplyPriceExp;
     private BigDecimal retailPriceExp;
     private BigDecimal priceDiff;
     private BigDecimal supplyPriceCounted;
     private BigDecimal retailPriceCounted;
     private String remarks;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;
     private Integer createdBy;
     private Integer updatedBy;
     private Set<InventoryCountDetail> inventoryCountDetails = new HashSet<InventoryCountDetail>(0);

    public InventoryCount() {
    }

	
    public InventoryCount(Outlet outlet, InventoryCountType inventoryCountType, Company company, Status status, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.outlet = outlet;
        this.inventoryCountType = inventoryCountType;
        this.company = company;
        this.status = status;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public InventoryCount(Outlet outlet, InventoryCountType inventoryCountType, Company company, Status status, String inventoryCountRefNo, Integer expectedProdQty, Integer countedProdQty, Integer countDiff, BigDecimal supplyPriceExp, BigDecimal retailPriceExp, BigDecimal priceDiff, BigDecimal supplyPriceCounted, BigDecimal retailPriceCounted, String remarks, boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy, Set<InventoryCountDetail> inventoryCountDetails) {
       this.outlet = outlet;
       this.inventoryCountType = inventoryCountType;
       this.company = company;
       this.status = status;
       this.inventoryCountRefNo = inventoryCountRefNo;
       this.expectedProdQty = expectedProdQty;
       this.countedProdQty = countedProdQty;
       this.countDiff = countDiff;
       this.supplyPriceExp = supplyPriceExp;
       this.retailPriceExp = retailPriceExp;
       this.priceDiff = priceDiff;
       this.supplyPriceCounted = supplyPriceCounted;
       this.retailPriceCounted = retailPriceCounted;
       this.remarks = remarks;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
       this.inventoryCountDetails = inventoryCountDetails;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="INVENTORY_COUNT_ID", unique=true, nullable=false)
    public Integer getInventoryCountId() {
        return this.inventoryCountId;
    }
    
    public void setInventoryCountId(Integer inventoryCountId) {
        this.inventoryCountId = inventoryCountId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OUTLET_ASSOCICATION_ID", nullable=false)
    public Outlet getOutlet() {
        return this.outlet;
    }
    
    public void setOutlet(Outlet outlet) {
        this.outlet = outlet;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="INVENTORY_COUNT_TYPE_ASSOCICATION_ID", nullable=false)
    public InventoryCountType getInventoryCountType() {
        return this.inventoryCountType;
    }
    
    public void setInventoryCountType(InventoryCountType inventoryCountType) {
        this.inventoryCountType = inventoryCountType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS_ASSOCICATION_ID", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="INVENTORY_COUNT_REF_NO", length=45)
    public String getInventoryCountRefNo() {
        return this.inventoryCountRefNo;
    }
    
    public void setInventoryCountRefNo(String inventoryCountRefNo) {
        this.inventoryCountRefNo = inventoryCountRefNo;
    }

    
    @Column(name="EXPECTED_PROD_QTY")
    public Integer getExpectedProdQty() {
        return this.expectedProdQty;
    }
    
    public void setExpectedProdQty(Integer expectedProdQty) {
        this.expectedProdQty = expectedProdQty;
    }

    
    @Column(name="COUNTED_PROD_QTY")
    public Integer getCountedProdQty() {
        return this.countedProdQty;
    }
    
    public void setCountedProdQty(Integer countedProdQty) {
        this.countedProdQty = countedProdQty;
    }

    
    @Column(name="COUNT_DIFF")
    public Integer getCountDiff() {
        return this.countDiff;
    }
    
    public void setCountDiff(Integer countDiff) {
        this.countDiff = countDiff;
    }

    
    @Column(name="SUPPLY_PRICE_EXP", precision=20)
    public BigDecimal getSupplyPriceExp() {
        return this.supplyPriceExp;
    }
    
    public void setSupplyPriceExp(BigDecimal supplyPriceExp) {
        this.supplyPriceExp = supplyPriceExp;
    }

    
    @Column(name="RETAIL_PRICE_EXP", precision=20)
    public BigDecimal getRetailPriceExp() {
        return this.retailPriceExp;
    }
    
    public void setRetailPriceExp(BigDecimal retailPriceExp) {
        this.retailPriceExp = retailPriceExp;
    }

    
    @Column(name="PRICE_DIFF", precision=20)
    public BigDecimal getPriceDiff() {
        return this.priceDiff;
    }
    
    public void setPriceDiff(BigDecimal priceDiff) {
        this.priceDiff = priceDiff;
    }

    
    @Column(name="SUPPLY_PRICE_COUNTED", precision=20)
    public BigDecimal getSupplyPriceCounted() {
        return this.supplyPriceCounted;
    }
    
    public void setSupplyPriceCounted(BigDecimal supplyPriceCounted) {
        this.supplyPriceCounted = supplyPriceCounted;
    }

    
    @Column(name="RETAIL_PRICE_COUNTED", precision=20)
    public BigDecimal getRetailPriceCounted() {
        return this.retailPriceCounted;
    }
    
    public void setRetailPriceCounted(BigDecimal retailPriceCounted) {
        this.retailPriceCounted = retailPriceCounted;
    }

    
    @Column(name="REMARKS", length=500)
    public String getRemarks() {
        return this.remarks;
    }
    
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryCount")
    public Set<InventoryCountDetail> getInventoryCountDetails() {
        return this.inventoryCountDetails;
    }
    
    public void setInventoryCountDetails(Set<InventoryCountDetail> inventoryCountDetails) {
        this.inventoryCountDetails = inventoryCountDetails;
    }




}


