package com.dowhile;

// Generated Dec 5, 2017 6:23:15 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CashManagment generated by hbm2java
 */
@Entity
@Table(name = "cash_managment")
public class CashManagment implements java.io.Serializable {

	private Integer cashManagmentId;
	private Outlet outlet;
	private DailyRegister dailyRegister;
	private Company company;
	private ExpenseType expenseType;
	private BigDecimal cashAmt;
	private String cashManagmentNotes;
	private String cashManagmentType;
	private boolean activeIndicator;
	private Date createdDate;
	private Date lastUpdated;
	private Integer createdBy;
	private Integer updatedBy;

	public CashManagment() {
	}

	public CashManagment(DailyRegister dailyRegister, Company company,
			ExpenseType expenseType, String cashManagmentType,
			boolean activeIndicator, Date createdDate, Date lastUpdated) {
		this.dailyRegister = dailyRegister;
		this.company = company;
		this.expenseType = expenseType;
		this.cashManagmentType = cashManagmentType;
		this.activeIndicator = activeIndicator;
		this.createdDate = createdDate;
		this.lastUpdated = lastUpdated;
	}

	public CashManagment(Outlet outlet, DailyRegister dailyRegister,
			Company company, ExpenseType expenseType, BigDecimal cashAmt,
			String cashManagmentNotes, String cashManagmentType,
			boolean activeIndicator, Date createdDate, Date lastUpdated,
			Integer createdBy, Integer updatedBy) {
		this.outlet = outlet;
		this.dailyRegister = dailyRegister;
		this.company = company;
		this.expenseType = expenseType;
		this.cashAmt = cashAmt;
		this.cashManagmentNotes = cashManagmentNotes;
		this.cashManagmentType = cashManagmentType;
		this.activeIndicator = activeIndicator;
		this.createdDate = createdDate;
		this.lastUpdated = lastUpdated;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "CASH_MANAGMENT_ID", unique = true, nullable = false)
	public Integer getCashManagmentId() {
		return this.cashManagmentId;
	}

	public void setCashManagmentId(Integer cashManagmentId) {
		this.cashManagmentId = cashManagmentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OUTLET_ASSOCICATION_ID")
	public Outlet getOutlet() {
		return this.outlet;
	}

	public void setOutlet(Outlet outlet) {
		this.outlet = outlet;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DAILY_REGISTER_ASSOCICATION_ID", nullable = false)
	public DailyRegister getDailyRegister() {
		return this.dailyRegister;
	}

	public void setDailyRegister(DailyRegister dailyRegister) {
		this.dailyRegister = dailyRegister;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COMPANY_ASSOCIATION_ID", nullable = false)
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EXPENSE_TYPE_ASSOCIATION_ID", nullable = false)
	public ExpenseType getExpenseType() {
		return this.expenseType;
	}

	public void setExpenseType(ExpenseType expenseType) {
		this.expenseType = expenseType;
	}

	@Column(name = "CASH_AMT", precision = 20)
	public BigDecimal getCashAmt() {
		return this.cashAmt;
	}

	public void setCashAmt(BigDecimal cashAmt) {
		this.cashAmt = cashAmt;
	}

	@Column(name = "CASH_MANAGMENT_NOTES", length = 256)
	public String getCashManagmentNotes() {
		return this.cashManagmentNotes;
	}

	public void setCashManagmentNotes(String cashManagmentNotes) {
		this.cashManagmentNotes = cashManagmentNotes;
	}

	@Column(name = "CASH_MANAGMENT_TYPE", nullable = false, length = 10)
	public String getCashManagmentType() {
		return this.cashManagmentType;
	}

	public void setCashManagmentType(String cashManagmentType) {
		this.cashManagmentType = cashManagmentType;
	}

	@Column(name = "ACTIVE_INDICATOR", nullable = false)
	public boolean isActiveIndicator() {
		return this.activeIndicator;
	}

	public void setActiveIndicator(boolean activeIndicator) {
		this.activeIndicator = activeIndicator;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_UPDATED", nullable = false, length = 19)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "CREATED_BY")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "UPDATED_BY")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

}
