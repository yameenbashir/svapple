package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name="address"
    ,catalog="ecom"
)
public class Address  implements java.io.Serializable {


     private Integer addressId;
     private Country country;
     private Company company;
     private Contact contact;
     private String addressType;
     private String contactName;
     private String firstName;
     private String lastName;
     private String email;
     private String phone;
     private String fax;
     private String website;
     private String twitter;
     private String street;
     private String suburb;
     private String city;
     private String postalCode;
     private String state;
     private String county;
     private String XCoordinate;
     private String YCoordinate;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;
     private Integer createdBy;
     private Integer updatedBy;
     private Set<Outlet> outlets = new HashSet<Outlet>(0);

    public Address() {
    }

	
    public Address(Company company, String addressType, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.company = company;
        this.addressType = addressType;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public Address(Country country, Company company, Contact contact, String addressType, String contactName, String firstName, String lastName, String email, String phone, String fax, String website, String twitter, String street, String suburb, String city, String postalCode, String state, String county, String XCoordinate, String YCoordinate, boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy, Set<Outlet> outlets) {
       this.country = country;
       this.company = company;
       this.contact = contact;
       this.addressType = addressType;
       this.contactName = contactName;
       this.firstName = firstName;
       this.lastName = lastName;
       this.email = email;
       this.phone = phone;
       this.fax = fax;
       this.website = website;
       this.twitter = twitter;
       this.street = street;
       this.suburb = suburb;
       this.city = city;
       this.postalCode = postalCode;
       this.state = state;
       this.county = county;
       this.XCoordinate = XCoordinate;
       this.YCoordinate = YCoordinate;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
       this.outlets = outlets;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ADDRESS_ID", unique=true, nullable=false)
    public Integer getAddressId() {
        return this.addressId;
    }
    
    public void setAddressId(Integer addressId) {
        this.addressId = addressId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTRY_ASSOCICATION_ID")
    public Country getCountry() {
        return this.country;
    }
    
    public void setCountry(Country country) {
        this.country = country;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_ASSOCIATION_ID", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_ASSOCICATION_ID")
    public Contact getContact() {
        return this.contact;
    }
    
    public void setContact(Contact contact) {
        this.contact = contact;
    }

    
    @Column(name="ADDRESS_TYPE", nullable=false, length=100)
    public String getAddressType() {
        return this.addressType;
    }
    
    public void setAddressType(String addressType) {
        this.addressType = addressType;
    }

    
    @Column(name="CONTACT_NAME", length=256)
    public String getContactName() {
        return this.contactName;
    }
    
    public void setContactName(String contactName) {
        this.contactName = contactName;
    }

    
    @Column(name="FIRST_NAME", length=256)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="LAST_NAME", length=256)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="EMAIL", length=256)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="PHONE", length=256)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    
    @Column(name="FAX", length=45)
    public String getFax() {
        return this.fax;
    }
    
    public void setFax(String fax) {
        this.fax = fax;
    }

    
    @Column(name="WEBSITE", length=256)
    public String getWebsite() {
        return this.website;
    }
    
    public void setWebsite(String website) {
        this.website = website;
    }

    
    @Column(name="TWITTER", length=256)
    public String getTwitter() {
        return this.twitter;
    }
    
    public void setTwitter(String twitter) {
        this.twitter = twitter;
    }

    
    @Column(name="STREET", length=256)
    public String getStreet() {
        return this.street;
    }
    
    public void setStreet(String street) {
        this.street = street;
    }

    
    @Column(name="SUBURB", length=256)
    public String getSuburb() {
        return this.suburb;
    }
    
    public void setSuburb(String suburb) {
        this.suburb = suburb;
    }

    
    @Column(name="CITY", length=256)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

    
    @Column(name="POSTAL_CODE", length=256)
    public String getPostalCode() {
        return this.postalCode;
    }
    
    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    
    @Column(name="STATE", length=256)
    public String getState() {
        return this.state;
    }
    
    public void setState(String state) {
        this.state = state;
    }

    
    @Column(name="COUNTY", length=256)
    public String getCounty() {
        return this.county;
    }
    
    public void setCounty(String county) {
        this.county = county;
    }

    
    @Column(name="X_COORDINATE", length=256)
    public String getXCoordinate() {
        return this.XCoordinate;
    }
    
    public void setXCoordinate(String XCoordinate) {
        this.XCoordinate = XCoordinate;
    }

    
    @Column(name="Y_COORDINATE", length=256)
    public String getYCoordinate() {
        return this.YCoordinate;
    }
    
    public void setYCoordinate(String YCoordinate) {
        this.YCoordinate = YCoordinate;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="address")
    public Set<Outlet> getOutlets() {
        return this.outlets;
    }
    
    public void setOutlets(Set<Outlet> outlets) {
        this.outlets = outlets;
    }




}


