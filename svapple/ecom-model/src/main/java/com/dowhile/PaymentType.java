package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PaymentType generated by hbm2java
 */
@Entity
@Table(name="payment_type"
    ,catalog="ecom"
)
public class PaymentType  implements java.io.Serializable {


     private Integer paymentTypeId;
     private String paymentTypeValue;
     private String roundTo;
     private String gateway;
     private boolean activeIndicator;
     private Date createdDate;
     private Date lastUpdated;
     private Integer createdBy;
     private Integer updatedBy;
     private Set<OrderMain> orderMains = new HashSet<OrderMain>(0);
     private Set<Receipt> receipts = new HashSet<Receipt>(0);
     private Set<InvoiceMain> invoiceMains = new HashSet<InvoiceMain>(0);

    public PaymentType() {
    }

	
    public PaymentType(String paymentTypeValue, boolean activeIndicator, Date createdDate, Date lastUpdated) {
        this.paymentTypeValue = paymentTypeValue;
        this.activeIndicator = activeIndicator;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public PaymentType(String paymentTypeValue, String roundTo, String gateway, boolean activeIndicator, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy, Set<OrderMain> orderMains, Set<Receipt> receipts, Set<InvoiceMain> invoiceMains) {
       this.paymentTypeValue = paymentTypeValue;
       this.roundTo = roundTo;
       this.gateway = gateway;
       this.activeIndicator = activeIndicator;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
       this.orderMains = orderMains;
       this.receipts = receipts;
       this.invoiceMains = invoiceMains;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="PAYMENT_TYPE_ID", unique=true, nullable=false)
    public Integer getPaymentTypeId() {
        return this.paymentTypeId;
    }
    
    public void setPaymentTypeId(Integer paymentTypeId) {
        this.paymentTypeId = paymentTypeId;
    }

    
    @Column(name="PAYMENT_TYPE_VALUE", nullable=false, length=100)
    public String getPaymentTypeValue() {
        return this.paymentTypeValue;
    }
    
    public void setPaymentTypeValue(String paymentTypeValue) {
        this.paymentTypeValue = paymentTypeValue;
    }

    
    @Column(name="ROUND_TO", length=50)
    public String getRoundTo() {
        return this.roundTo;
    }
    
    public void setRoundTo(String roundTo) {
        this.roundTo = roundTo;
    }

    
    @Column(name="GATEWAY", length=100)
    public String getGateway() {
        return this.gateway;
    }
    
    public void setGateway(String gateway) {
        this.gateway = gateway;
    }

    
    @Column(name="ACTIVE_INDICATOR", nullable=false)
    public boolean isActiveIndicator() {
        return this.activeIndicator;
    }
    
    public void setActiveIndicator(boolean activeIndicator) {
        this.activeIndicator = activeIndicator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paymentType")
    public Set<OrderMain> getOrderMains() {
        return this.orderMains;
    }
    
    public void setOrderMains(Set<OrderMain> orderMains) {
        this.orderMains = orderMains;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paymentType")
    public Set<Receipt> getReceipts() {
        return this.receipts;
    }
    
    public void setReceipts(Set<Receipt> receipts) {
        this.receipts = receipts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paymentType")
    public Set<InvoiceMain> getInvoiceMains() {
        return this.invoiceMains;
    }
    
    public void setInvoiceMains(Set<InvoiceMain> invoiceMains) {
        this.invoiceMains = invoiceMains;
    }




}


