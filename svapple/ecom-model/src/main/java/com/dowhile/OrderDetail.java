package com.dowhile;
// Generated Aug 17, 2017 1:48:25 PM by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OrderDetail generated by hbm2java
 */
@Entity
@Table(name="order_detail"
    ,catalog="ecom"
)
public class OrderDetail  implements java.io.Serializable {


     private Integer orderDetailId;
     private Outlet outlet;
     private ProductVariant productVariant;
     private OrderMain orderMain;
     private Product product;
     private BigDecimal itemUnitPrice;
     private BigDecimal itemTaxAmount;
     private String itemNotes;
     private int productQuantity;
     private Date createdDate;
     private Date lastUpdated;
     private Integer createdBy;
     private Integer updatedBy;

    public OrderDetail() {
    }

	
    public OrderDetail(int productQuantity, Date createdDate, Date lastUpdated) {
        this.productQuantity = productQuantity;
        this.createdDate = createdDate;
        this.lastUpdated = lastUpdated;
    }
    public OrderDetail(Outlet outlet, ProductVariant productVariant, OrderMain orderMain, Product product, BigDecimal itemUnitPrice, BigDecimal itemTaxAmount, String itemNotes, int productQuantity, Date createdDate, Date lastUpdated, Integer createdBy, Integer updatedBy) {
       this.outlet = outlet;
       this.productVariant = productVariant;
       this.orderMain = orderMain;
       this.product = product;
       this.itemUnitPrice = itemUnitPrice;
       this.itemTaxAmount = itemTaxAmount;
       this.itemNotes = itemNotes;
       this.productQuantity = productQuantity;
       this.createdDate = createdDate;
       this.lastUpdated = lastUpdated;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ORDER_DETAIL_ID", unique=true, nullable=false)
    public Integer getOrderDetailId() {
        return this.orderDetailId;
    }
    
    public void setOrderDetailId(Integer orderDetailId) {
        this.orderDetailId = orderDetailId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OUTLET_ASSOCICATION_ID")
    public Outlet getOutlet() {
        return this.outlet;
    }
    
    public void setOutlet(Outlet outlet) {
        this.outlet = outlet;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_VARIENT_ASSOCIATION_ID")
    public ProductVariant getProductVariant() {
        return this.productVariant;
    }
    
    public void setProductVariant(ProductVariant productVariant) {
        this.productVariant = productVariant;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_MAIN_ASSOCICATION_ID")
    public OrderMain getOrderMain() {
        return this.orderMain;
    }
    
    public void setOrderMain(OrderMain orderMain) {
        this.orderMain = orderMain;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ASSOCIATION_ID")
    public Product getProduct() {
        return this.product;
    }
    
    public void setProduct(Product product) {
        this.product = product;
    }

    
    @Column(name="ITEM_UNIT_PRICE", precision=21, scale=5)
    public BigDecimal getItemUnitPrice() {
        return this.itemUnitPrice;
    }
    
    public void setItemUnitPrice(BigDecimal itemUnitPrice) {
        this.itemUnitPrice = itemUnitPrice;
    }

    
    @Column(name="ITEM_TAX_AMOUNT", precision=21, scale=5)
    public BigDecimal getItemTaxAmount() {
        return this.itemTaxAmount;
    }
    
    public void setItemTaxAmount(BigDecimal itemTaxAmount) {
        this.itemTaxAmount = itemTaxAmount;
    }

    
    @Column(name="ITEM_NOTES", length=256)
    public String getItemNotes() {
        return this.itemNotes;
    }
    
    public void setItemNotes(String itemNotes) {
        this.itemNotes = itemNotes;
    }

    
    @Column(name="PRODUCT_QUANTITY", nullable=false)
    public int getProductQuantity() {
        return this.productQuantity;
    }
    
    public void setProductQuantity(int productQuantity) {
        this.productQuantity = productQuantity;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATED", nullable=false, length=19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }
    
    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    
    @Column(name="CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }




}


