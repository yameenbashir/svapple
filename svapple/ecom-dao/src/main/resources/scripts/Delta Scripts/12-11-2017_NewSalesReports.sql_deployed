use ecom;
DROP VIEW IF EXISTS SaleReport_withOutSale;
CREATE VIEW SaleReport_withOutSale AS 
SELECT 
(select PRODUCT_NAME from ecom.product where PRODUCT_ASSOCIATION_ID=PRODUCT_ID) AS 'Product',
(select OUTLET_NAME from ecom.outlet where invoice_main.OUTLET_ASSOCICATION_ID=OUTLET_ID) AS 'Outlet',
DATE(invoice_main.CREATED_DATE) AS CREATED_DATE, SUM(ITEM_SALE_PRICE * PRODUCT_QUANTITY)  AS Revenue,(SUM(ITEM_SALE_PRICE * PRODUCT_QUANTITY )+SUM(ITEM_TAX_AMOUNT * PRODUCT_QUANTITY )) AS 'Revenue_tax_incl', SUM(ITEM_ORIGNAL_AMT * PRODUCT_QUANTITY ) AS 'Cost_of_Goods', 
(SUM(ITEM_SALE_PRICE * PRODUCT_QUANTITY )-SUM(ITEM_ORIGNAL_AMT * PRODUCT_QUANTITY )) As 'Gross_Profit', 
COALESCE((100-((SUM(ITEM_ORIGNAL_AMT))/(SUM(ITEM_SALE_PRICE)))*100),0) As Margin,
SUM(PRODUCT_QUANTITY) AS 'Items_Sold',
SUM(ITEM_TAX_AMOUNT) AS Tax,
invoice_main.COMPANY_ASSOCIATION_ID,invoice_main.OUTLET_ASSOCICATION_ID
FROM ecom.invoice_detail
inner join invoice_main on INVOICE_MAIN_ID = INVOICE_MAIN_ASSOCICATION_ID 
 where invoice_main.STATUS_ASSOCICATION_ID <> 11
 AND ITEM_DISCOUNT_PRCT = 0
group by PRODUCT_ASSOCIATION_ID, DATE(CREATED_DATE)
Order by  DATE(CREATED_DATE);

DROP VIEW IF EXISTS SaleReport_withSale;
CREATE VIEW SaleReport_withSale AS 
SELECT 
(select PRODUCT_NAME from ecom.product where PRODUCT_ASSOCIATION_ID=PRODUCT_ID) AS 'Product',
(select OUTLET_NAME from ecom.outlet where invoice_main.OUTLET_ASSOCICATION_ID=OUTLET_ID) AS 'Outlet',
DATE(invoice_main.CREATED_DATE) AS CREATED_DATE, SUM(ITEM_SALE_PRICE * PRODUCT_QUANTITY)  AS Revenue,(SUM(ITEM_SALE_PRICE * PRODUCT_QUANTITY )+SUM(ITEM_TAX_AMOUNT * PRODUCT_QUANTITY )) AS 'Revenue_tax_incl', SUM(ITEM_ORIGNAL_AMT * PRODUCT_QUANTITY ) AS 'Cost_of_Goods', 
(SUM(ITEM_SALE_PRICE * PRODUCT_QUANTITY )-SUM(ITEM_ORIGNAL_AMT * PRODUCT_QUANTITY )) As 'Gross_Profit', 
COALESCE((100-((SUM(ITEM_ORIGNAL_AMT))/(SUM(ITEM_SALE_PRICE)))*100),0) As Margin,
SUM(PRODUCT_QUANTITY) AS 'Items_Sold',
SUM(ITEM_TAX_AMOUNT) AS Tax,
invoice_main.COMPANY_ASSOCIATION_ID,invoice_main.OUTLET_ASSOCICATION_ID
FROM ecom.invoice_detail
inner join invoice_main on INVOICE_MAIN_ID = INVOICE_MAIN_ASSOCICATION_ID 
 where invoice_main.STATUS_ASSOCICATION_ID <> 11
 AND ITEM_DISCOUNT_PRCT > 0
group by PRODUCT_ASSOCIATION_ID, DATE(CREATED_DATE)
Order by  DATE(CREATED_DATE);

insert into ecom.menu ( MENU_NAME, ROLE_ASSOCIATION_ID, ACTION_TYPE, ACTIVE_INDICATOR, CREATED_DATE, LAST_UPDATED,CREATED_BY,UPDATED_BY,COMPANY_ASSOCIATION_ID	)
values ('salesReportWithSale', 	1, 'Page', 1, CURDATE(), CURDATE(), 1, 1, 1);

insert into ecom.menu ( MENU_NAME, ROLE_ASSOCIATION_ID, ACTION_TYPE, ACTIVE_INDICATOR, CREATED_DATE, LAST_UPDATED,CREATED_BY,UPDATED_BY,COMPANY_ASSOCIATION_ID	)
values ('salesReportWithSale', 	2, 	'Page', 1, CURDATE(), CURDATE(), 1, 1, 1);


insert into ecom.menu ( MENU_NAME, ROLE_ASSOCIATION_ID, ACTION_TYPE, ACTIVE_INDICATOR, CREATED_DATE, LAST_UPDATED,CREATED_BY,UPDATED_BY,COMPANY_ASSOCIATION_ID	)
values ('salesReportWithSale', 	3, 	'Page', 1, CURDATE(), CURDATE(), 1, 1, 1);






insert into ecom.menu ( MENU_NAME, ROLE_ASSOCIATION_ID, ACTION_TYPE, ACTIVE_INDICATOR, CREATED_DATE, LAST_UPDATED,CREATED_BY,UPDATED_BY,COMPANY_ASSOCIATION_ID	)
values ('salesReportWithOutSale', 	1, 'Page', 1, CURDATE(), CURDATE(), 1, 1, 1);

insert into ecom.menu ( MENU_NAME, ROLE_ASSOCIATION_ID, ACTION_TYPE, ACTIVE_INDICATOR, CREATED_DATE, LAST_UPDATED,CREATED_BY,UPDATED_BY,COMPANY_ASSOCIATION_ID	)
values ('salesReportWithOutSale', 	2, 	'Page', 1, CURDATE(), CURDATE(), 1, 1, 1);


insert into ecom.menu ( MENU_NAME, ROLE_ASSOCIATION_ID, ACTION_TYPE, ACTIVE_INDICATOR, CREATED_DATE, LAST_UPDATED,CREATED_BY,UPDATED_BY,COMPANY_ASSOCIATION_ID	)
values ('salesReportWithOutSale', 	3, 	'Page', 1, CURDATE(), CURDATE(), 1, 1, 1);
